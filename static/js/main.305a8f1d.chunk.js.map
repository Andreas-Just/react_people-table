{"version":3,"sources":["components/Nav/Nav.tsx","components/HomePage/HomePage.tsx","components/TableCells/TableCells.tsx","components/PeopleTable/PeopleTable.tsx","api/getTabs.ts","components/PeoplePege/PeoplePage.tsx","components/ErrorPage/ErrorPage.tsx","components/Main/Main.tsx","App.tsx","index.tsx"],"names":["Nav","Menu","inverted","color","className","Item","as","NavLink","name","to","exact","path","position","Input","placeholder","icon","size","HomePage","Header","content","TableCells","person","tableHeaders","onSelect","map","code","Table","Cell","cn","TableCells_centenarians","TableCells_aborigine","born","key","onClick","PeopleTable","people","sortTable","celled","Row","HeaderCell","Body","id","warning","slug","sex","Footer","colSpan","floated","pagination","Icon","getData","url","a","fetch","response","json","getTabs","idx","father","fatherName","mother","motherName","age","died","century","Math","ceil","children","filter","child","join","headersConfig","sortType","field","b","localeCompare","PeoplePage","useState","setPeople","length","Object","entries","createTableHeaders","history","useHistory","location","useLocation","personName","useParams","searchParams","URLSearchParams","search","sortedBy","get","useEffect","then","useMemo","ppl","sort","handleSelect","useCallback","find","parent","push","pathname","callback","set","toString","reverse","ErrorPage","message","Main","component","from","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.305a8f1d.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport './Nav.scss';\nimport { Input, Menu } from 'semantic-ui-react';\n\nconst Nav = () => (\n  <>\n    <Menu inverted color=\"teal\" className=\"Nav\">\n      <Menu.Item\n        as={NavLink}\n        name=\"home\"\n        to=\"/\"\n        exact\n      />\n      <Menu.Item\n        as={NavLink}\n        name=\"people\"\n        to=\"/people\"\n        exact\n      />\n      <Route path=\"/people\">\n        <Menu.Item position=\"right\">\n          <Input\n            className=\"Nav-Search icon\"\n            placeholder=\"Search...\"\n            icon=\"search\"\n            size=\"mini\"\n          />\n        </Menu.Item>\n      </Route>\n    </Menu>\n  </>\n);\n\nexport default Nav;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport './HomePage.scss';\n\nconst HomePage = () => (\n  <div className=\"HomePage\">\n    <Header size=\"huge\" content=\"Home Page\" color=\"teal\" />\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport cn from 'classnames';\nimport './TableCells.scss';\nimport { Table } from 'semantic-ui-react';\n\ntype Props = {\n  person: Person;\n  tableHeaders: TableHeader[];\n  onSelect: (field: string, person: Person) => void;\n};\n\nconst TableCells: React.FC<Props> = ({ person, tableHeaders, onSelect }) => (\n  <>\n    {tableHeaders.map(({ code }) => (\n      <Table.Cell\n        className={cn('TableCells', {\n          TableCells_centenarians: person[code] >= 65 && code === 'age',\n          TableCells_aborigine: person.born <= 1650 && code === 'name',\n        })}\n        key={code}\n        content={person[code]}\n        onClick={() => onSelect(code, person)}\n      />\n    ))}\n  </>\n);\n\nexport default TableCells;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Table, Menu, Icon } from 'semantic-ui-react';\nimport TableCells from '../TableCells';\nimport './PeopleTable.scss';\n\ntype Props = {\n  path: string;\n  people: Person[];\n  tableHeaders: TableHeader[];\n  sortTable: (arg: string) => void;\n  onSelect: (field: string, person: Person) => void;\n};\n\nconst PeopleTable: React.FC<Props> = ({ path, people, tableHeaders, sortTable, onSelect }) => {\n  return (\n    <Table celled className=\"PeopleTable\">\n      <Table.Header>\n        <Table.Row>\n          {tableHeaders.map(({ name, code }) => (\n            <Table.HeaderCell\n              key={name}\n              content={name}\n              className=\"sort-button\"\n              onClick={() => sortTable(code)}\n            />\n          ))}\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {people.map(person => (\n          <Table.Row\n            key={person.id}\n            warning={person.slug === path}\n            className={cn('PeopleTable-TableRow', {\n              'PeopleTable-TableRow_male': person.sex === 'm',\n              'PeopleTable-TableRow_female': person.sex === 'f',\n            })}\n          >\n            <TableCells\n              person={person}\n              tableHeaders={tableHeaders}\n              onSelect={onSelect}\n            />\n          </Table.Row>\n        ))}\n      </Table.Body>\n\n      <Table.Footer>\n        <Table.Row>\n          <Table.HeaderCell colSpan=\"3\">\n            <Menu floated=\"right\" pagination>\n              <Menu.Item as=\"a\" icon>\n                <Icon name=\"chevron left\" />\n              </Menu.Item>\n              <Menu.Item as=\"a\">1</Menu.Item>\n              <Menu.Item as=\"a\">2</Menu.Item>\n              <Menu.Item as=\"a\">3</Menu.Item>\n              <Menu.Item as=\"a\">4</Menu.Item>\n              <Menu.Item as=\"a\" icon>\n                <Icon name=\"chevron right\" />\n              </Menu.Item>\n            </Menu>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n  );\n};\n\nexport default PeopleTable;\n","const BASE_URL = 'https://andreas-just.github.io/library-json';\nconst API_URL = '/people/people-slug.json';\n\nexport const getData = async (url: string) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nexport const getTabs = async (): Promise<Person[]> => {\n  const people = await getData(`${BASE_URL}${API_URL}`);\n\n  return people.map((person: Person, idx: number) => ({\n    ...person,\n    id: idx + 1,\n    father: person.fatherName || '',\n    mother: person.motherName || '',\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n      .filter((child: Person) => (\n        child.fatherName === person.name || child.motherName === person.name\n      ))\n      .map((child: Person) => child.name)\n      .join(', ') || '',\n  }));\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\nimport { Header } from 'semantic-ui-react';\nimport PeopleTable from '../PeopleTable';\nimport { getTabs } from '../../api/getTabs';\nimport './PeoplePage.scss';\n\nconst headersConfig: HeadersConfig = {\n  id: 'Id',\n  name: 'Name',\n  sex: 'Sex',\n  age: 'Age',\n  born: 'Born',\n  died: 'Died',\n  century: 'Century',\n  father: 'Father',\n  mother: 'Mother',\n  children: 'Children',\n};\n\nconst createTableHeaders = (people: Person[]): TableHeader[] => {\n  if (people.length === 0) {\n    return [{ name: 'There are no people', code: '' }];\n  }\n\n  return (\n    Object.entries(headersConfig).map(([key, value]) => ({\n      code: key, name: value,\n    }))\n  );\n};\n\ndeclare type Callback = (arg: string) => (a: Person, b: Person) => number;\n\nconst sortType: Callback = (field) => {\n  switch (field) {\n    case 'id':\n    case 'age':\n    case 'born':\n    case 'died':\n    case 'century':\n      return (a, b) => a[field] - b[field];\n    case 'name':\n    case 'sex':\n    case 'father':\n    case 'mother':\n    case 'children':\n      return (a, b) => a[field].localeCompare(b[field]);\n    default:\n      return () => 0;\n  }\n};\n\nconst PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const tableHeaders = createTableHeaders(people);\n  const history = useHistory();\n  const location = useLocation();\n  const { personName } = useParams();\n  const searchParams = new URLSearchParams(location.search);\n  const sortedBy: keyof HeadersConfig | null = searchParams\n    .get('sortBy') as keyof HeadersConfig;\n\n  useEffect(() => {\n    getTabs().then(setPeople);\n  }, []);\n\n  useMemo(() => {\n    setPeople(ppl => ppl.sort(sortType(sortedBy)));\n  }, [sortedBy]);\n\n  const sortTable = (field: string) => {\n    const callback = sortType(field);\n\n    if (sortedBy !== field) {\n      setPeople([...people].sort(callback));\n      searchParams.set('sortBy', field);\n      history.push({ search: searchParams.toString() });\n    } else {\n      setPeople([...people].reverse());\n    }\n  };\n\n  const handleSelect = useCallback((field, person) => {\n    const path: string | undefined = people\n      .find(parent => parent.name === person[field])?.slug;\n\n    if (field === 'name') {\n      history.push({\n        pathname: `/people/${person.slug}`,\n        search: location.search,\n      });\n    }\n\n    if (path) {\n      if (field === 'mother') {\n        history.push({\n          pathname: `/people/${path}`,\n          search: location.search,\n        });\n      } else if (field === 'father') {\n        history.push({\n          pathname: `/people/${path}`,\n          search: location.search,\n        });\n      }\n    }\n  }, [history, location, people]);\n\n  return (\n    <div className=\"PeoplePage\">\n      <Header size=\"huge\" content=\"People table\" color=\"teal\" />\n\n      <PeopleTable\n        people={people}\n        tableHeaders={tableHeaders}\n        sortTable={sortTable}\n        onSelect={handleSelect}\n        path={personName}\n      />\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\n\ntype Props = {\n  message: string;\n};\n\nconst ErrorPage: React.FC<Props> = ({ message }) => <h2>{message}</h2>;\n\nexport default ErrorPage;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport HomePage from '../HomePage';\nimport PeoplePage from '../PeoplePege';\nimport ErrorPage from '../ErrorPage';\nimport './Main.scss';\n\nconst Main = () => {\n  return (\n    <div className=\"Main\">\n      <Switch>\n        <Route\n          path=\"/people/:personName?\"\n          component={PeoplePage}\n        />\n\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Redirect from=\"/home\" to=\"/\" />\n\n        <Route path=\"/error\">\n          <ErrorPage message=\"Not found\" />\n        </Route>\n        <Redirect from=\"/*\" to=\"/error\" />\n\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Nav from './components/Nav';\nimport Main from './components/Main';\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <header>\n      <Nav />\n    </header>\n\n    <Main />\n    <footer className=\"App-Footer\">\n      &copy;Andreas Just 2020\n    </footer>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}