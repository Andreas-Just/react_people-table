{"version":3,"sources":["components/Nav/Nav.tsx","components/HomePage/HomePage.tsx","components/TableCells/TableCells.tsx","components/Paginator/Paginator.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePege/PeoplePage.tsx","components/ErrorPage/ErrorPage.tsx","components/Main/Main.tsx","api/getTabs.ts","App.tsx","index.tsx"],"names":["Nav","query","setQuery","applyQuery","Menu","inverted","color","className","Item","as","NavLink","name","to","exact","path","position","Input","placeholder","icon","size","value","onChange","target","HomePage","Header","content","TableCells","person","tableHeaders","onSelect","map","code","Table","Cell","cn","TableCells_centenarians","TableCells_aborigine","born","key","onClick","options","text","Paginator","page","perPage","totalPages","onSelectPage","onSelectPerPage","HeaderCell","colSpan","Dropdown","floated","selection","wrapSelection","simple","Pagination","activePage","onPageChange","ellipsisItem","Icon","prevItem","disabled","firstItem","nextItem","lastItem","PeopleTable","React","memo","people","sortedBy","isSortedAsc","onSortTable","onSelectPerson","celled","Row","Body","id","warning","slug","sex","Footer","headersConfig","age","died","century","father","mother","children","PeoplePage","historyPush","location","useLocation","personName","useParams","searchParams","URLSearchParams","search","Number","get","length","Object","entries","createTableHeaders","sortedPeople","useMemo","callback","field","a","b","localeCompare","sortType","result","sort","reverse","reckon","Math","ceil","start","visiblePeople","slice","some","sortBy","sortOrder","find","parent","_","String","param","ErrorPage","message","Main","render","from","getData","url","fetch","response","json","getTabs","idx","fatherName","motherName","filter","child","join","App","useState","setPeople","useEffect","then","history","useHistory","queryFromURL","params","fromEntries","pathName","set","push","pathname","toString","useCallback","debounce","queryStr","delete","lowerQuery","toLowerCase","filteredPeople","includes","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3dc0f3f1.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport { Input, Menu } from 'semantic-ui-react';\nimport './Nav.scss';\n\ntype Props = {\n  query: string;\n  setQuery: (val: string) => void;\n  applyQuery: (val: string) => void;\n};\n\nconst Nav: React.FC<Props> = ({ query, setQuery, applyQuery }) => {\n  return (\n    <>\n      <Menu inverted color=\"teal\" className=\"Nav\">\n        <Menu.Item\n          as={NavLink}\n          name=\"home\"\n          to=\"/\"\n          exact\n        />\n        <Menu.Item\n          as={NavLink}\n          name=\"people\"\n          to=\"/people\"\n          exact\n        />\n        <Route path=\"/people\">\n          <Menu.Item position=\"right\">\n            <Input\n              className=\"Nav-Search icon\"\n              placeholder=\"Search...\"\n              icon=\"search\"\n              size=\"mini\"\n              value={query}\n              onChange={({ target }) => {\n                setQuery(target.value);\n                applyQuery(target.value);\n              }}\n            />\n          </Menu.Item>\n        </Route>\n      </Menu>\n    </>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport './HomePage.scss';\n\nconst HomePage = () => (\n  <div className=\"HomePage\">\n    <Header size=\"huge\" content=\"Home Page\" color=\"teal\" />\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Table } from 'semantic-ui-react';\nimport './TableCells.scss';\n\ntype Props = {\n  person: Person;\n  tableHeaders: TableHeader[];\n  onSelect: (field: string, person: Person) => void;\n};\n\nconst TableCells: React.FC<Props> = ({ person, tableHeaders, onSelect }) => (\n  <>\n    {tableHeaders.map(({ code }) => (\n      <Table.Cell\n        className={cn('TableCells', {\n          TableCells_centenarians: person[code] >= 65 && code === 'age',\n          TableCells_aborigine: person.born <= 1650 && code === 'name',\n        })}\n        key={code}\n        content={person[code]}\n        onClick={() => onSelect(code, person)}\n      />\n    ))}\n  </>\n);\n\nexport default TableCells;\n","import React from 'react';\n// import memoize from 'memoize-one';\n// import cn from 'classnames';\nimport { Icon, Pagination, Table, Dropdown } from 'semantic-ui-react';\nimport './Paginator.scss';\n\nconst options = [\n  { key: 1, text: '5 people', value: 5 },\n  { key: 2, text: '10 people', value: 10 },\n  { key: 3, text: '20 people', value: 20 },\n  { key: 4, text: '50 people', value: 50 },\n];\n\ntype Props = {\n  page: number;\n  perPage: number;\n  totalPages: number;\n  onSelectPage: (_: React.SyntheticEvent, data: object) => void;\n  onSelectPerPage: (_: React.SyntheticEvent, data: object) => void;\n};\n\nconst Paginator: React.FC<Props> = ({\n  page,\n  perPage,\n  totalPages,\n  onSelectPage,\n  onSelectPerPage,\n}) => {\n  return (\n    <Table.HeaderCell colSpan=\"10\" className=\"Pagination\">\n      <Dropdown\n        placeholder=\"Select people per page\"\n        floated=\"left\"\n        selection\n        name=\"perPage\"\n        value={perPage}\n        onChange={onSelectPerPage}\n        options={options}\n        wrapSelection={false}\n        simple\n      />\n      <Pagination\n        floated=\"right\"\n        activePage={page}\n        onPageChange={onSelectPage}\n        ellipsisItem={{ content: <Icon name=\"ellipsis horizontal\" />, icon: true }}\n        prevItem={{\n          content: <Icon name=\"angle left\" />,\n          disabled: page === 1,\n          icon: true,\n        }}\n        firstItem={{\n          content: <Icon name=\"angle double left\" />,\n          disabled: page === 1,\n          icon: true,\n        }}\n        nextItem={{\n          content: <Icon name=\"angle right\" />,\n          disabled: page === totalPages,\n          icon: true,\n        }}\n        lastItem={{\n          content: <Icon name=\"angle double right\" />,\n          disabled: page === totalPages,\n          icon: true,\n        }}\n        totalPages={totalPages}\n      />\n    </Table.HeaderCell>\n  );\n};\n\nexport default Paginator;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Icon, Table } from 'semantic-ui-react';\nimport TableCells from '../TableCells';\nimport Paginator from '../Paginator';\nimport './PeopleTable.scss';\n\ntype Props = {\n  path: string;\n  page: number;\n  perPage: number;\n  totalPages: number;\n  sortedBy: string;\n  isSortedAsc: boolean;\n  people: Person[];\n  tableHeaders: TableHeader[];\n  onSortTable: (field: string) => void;\n  onSelectPerson: (field: string, person: Person) => void;\n  onSelectPage: (_: React.SyntheticEvent, data: object) => void;\n  onSelectPerPage: (_: React.SyntheticEvent, data: object) => void;\n};\n\nconst PeopleTable: React.FC<Props> = React.memo(\n  ({\n    path,\n    page,\n    perPage,\n    totalPages,\n    people,\n    sortedBy,\n    isSortedAsc,\n    tableHeaders,\n    onSortTable,\n    onSelectPerson,\n    onSelectPage,\n    onSelectPerPage,\n  }) => {\n    return (\n      <Table celled className=\"PeopleTable\">\n        <Table.Header>\n          <Table.Row className=\"PeopleTable-TableRow\">\n            {tableHeaders.map(({ name, code }) => (\n              <Table.HeaderCell\n                key={code}\n                className=\"PeopleTable-HeaderCell Th\"\n                onClick={() => onSortTable(code)}\n              >\n                {sortedBy === code && (\n                  <Icon\n                    name={\n                      isSortedAsc ? 'arrow circle down' : 'arrow circle up'\n                    }\n                    className=\"PeopleTable-Icon\"\n                    color=\"teal\"\n                  />\n                )}\n                {name}\n              </Table.HeaderCell>\n            ))}\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {people.map(person => (\n            <Table.Row\n              key={person.id}\n              warning={person.slug === path}\n              className={cn({\n                'PeopleTable-TableRow': true,\n                'PeopleTable-TableRow_male': person.sex === 'm',\n                'PeopleTable-TableRow_female': person.sex === 'f',\n              })}\n            >\n              <TableCells\n                person={person}\n                tableHeaders={tableHeaders}\n                onSelect={onSelectPerson}\n              />\n            </Table.Row>\n          ))}\n        </Table.Body>\n\n        <Table.Footer>\n          <Table.Row className=\"PeopleTable-TableRow\">\n            <Paginator\n              page={page}\n              perPage={perPage}\n              totalPages={totalPages}\n              onSelectPage={onSelectPage}\n              onSelectPerPage={onSelectPerPage}\n            />\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    );\n  },\n);\n\n\nexport default PeopleTable;\n","import React, { useMemo } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Header } from 'semantic-ui-react';\nimport PeopleTable from '../PeopleTable';\nimport './PeoplePage.scss';\n\nconst headersConfig: HeadersConfig = {\n  id: 'Id',\n  name: 'Name',\n  sex: 'Sex',\n  age: 'Age',\n  born: 'Born',\n  died: 'Died',\n  century: 'Century',\n  father: 'Father',\n  mother: 'Mother',\n  children: 'Children',\n};\n\nconst createTableHeaders = (people: Person[]): TableHeader[] => {\n  if (people.length === 0) {\n    return [{ name: 'There are no people', code: '' }];\n  }\n\n  return (\n    Object.entries(headersConfig).map(([key, value]) => ({\n      code: key, name: value,\n    }))\n  );\n};\n\ndeclare type Callback = (arg: string) => (a: Person, b: Person) => number;\n\nconst sortType: Callback = (field) => {\n  switch (field) {\n    case 'id':\n    case 'age':\n    case 'born':\n    case 'died':\n    case 'century':\n      return (a, b) => a[field] - b[field];\n    case 'name':\n    case 'sex':\n    case 'father':\n    case 'mother':\n    case 'children':\n      return (a, b) => a[field].localeCompare(b[field]);\n    default:\n      return () => 0;\n  }\n};\n\ntype Props = {\n  people: Person[];\n  historyPush: (param: Param, path: string) => void;\n};\n\nconst PeoplePage: React.FC<Props> = React.memo(\n  ({ people, historyPush }) => {\n    const location = useLocation();\n    const { personName } = useParams();\n\n    const searchParams = new URLSearchParams(location.search);\n    const page: number = Number(searchParams.get('page')) || 1;\n    const perPage: number = Number(searchParams.get('perPage')) || 5;\n    const isSortedAsc = searchParams.get('sortOrder') !== 'desc';\n    const sortedBy: keyof HeadersConfig = searchParams\n      .get('sortBy') as keyof HeadersConfig || 'id';\n\n    const tableHeaders = createTableHeaders(people);\n\n    const sortedPeople = useMemo(() => {\n      const callback = sortType(sortedBy);\n      const result = [...people].sort(callback);\n\n      if (!isSortedAsc) {\n        result.reverse();\n      }\n\n      return result;\n    }, [people, sortedBy, isSortedAsc]);\n\n    const totalPages = useMemo(() => {\n      const reckon = Math.ceil(sortedPeople.length / perPage);\n\n      if (people.length && page > reckon) {\n        historyPush({ page: '1', perPage: '5' }, personName);\n      }\n\n      return reckon;\n    }, [page, perPage, sortedPeople, personName, people, historyPush]);\n\n    const start = (page - 1) * perPage;\n    const visiblePeople = useMemo(() => (\n      sortedPeople.slice(start, start + perPage)\n    ), [sortedPeople, start, perPage]);\n\n    if (personName && !people.some(person => person.slug === personName)) {\n      historyPush({}, '');\n    }\n\n    const handleSelectPage = (_: React.SyntheticEvent, { activePage }: any) => {\n      historyPush({ page: String(activePage) }, personName);\n    };\n\n    const handleSelectPerPage = (_: React.SyntheticEvent, { name, value }: any) => {\n      const param = { [name]: String(value) };\n\n      historyPush(param, personName);\n    };\n\n    const handleSelectPerson = (field: string, person: Person) => {\n      const path: string | undefined = people\n        .find(parent => parent.name === person[field])?.slug;\n\n      if (field === 'name') {\n        historyPush({}, person.slug);\n      }\n\n      if (path) {\n        if (field === 'mother') {\n          historyPush({}, path);\n        } else if (field === 'father') {\n          historyPush({}, path);\n        }\n      }\n    };\n\n    const handleSortTable = (field: string) => {\n      if (sortedBy !== field) {\n        historyPush({\n          sortBy: field,\n          sortOrder: 'asc',\n        }, personName);\n      } else {\n        historyPush({\n          sortOrder: isSortedAsc ? 'desc' : 'asc',\n        }, personName);\n      }\n    };\n\n    return (\n      <div className=\"PeoplePage\">\n        <Header size=\"huge\" content=\"People table\" color=\"teal\" />\n\n        <PeopleTable\n          tableHeaders={tableHeaders}\n          people={visiblePeople}\n          sortedBy={sortedBy}\n          isSortedAsc={isSortedAsc}\n          totalPages={totalPages}\n          page={page}\n          perPage={perPage}\n          path={personName}\n          onSortTable={handleSortTable}\n          onSelectPerson={handleSelectPerson}\n          onSelectPage={handleSelectPage}\n          onSelectPerPage={handleSelectPerPage}\n        />\n      </div>\n    );\n  },\n);\n\n\nexport default PeoplePage;\n","import React from 'react';\n\ntype Props = {\n  message: string;\n};\n\nconst ErrorPage: React.FC<Props> = ({ message }) => <h2>{message}</h2>;\n\nexport default ErrorPage;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport HomePage from '../HomePage';\nimport PeoplePage from '../PeoplePege';\nimport ErrorPage from '../ErrorPage';\nimport './Main.scss';\n\ntype Props = {\n  people: Person[];\n  historyPush: (param: Param, path: string) => void;\n};\n\nconst Main: React.FC<Props> = ({ people, historyPush }) => {\n  return (\n    <div className=\"Main\">\n      <Switch>\n        <Route\n          path=\"/people/:personName?\"\n          render={() => (\n            <PeoplePage\n              people={people}\n              historyPush={historyPush}\n            />\n          )}\n        />\n\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Redirect from=\"/home\" to=\"/\" />\n\n        <Route path=\"/error\">\n          <ErrorPage message=\"Not found\" />\n        </Route>\n        <Redirect from=\"/*\" to=\"/error\" />\n\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","const BASE_URL = 'https://andreas-just.github.io/library-json';\nconst API_URL = '/people/people-slug.json';\n\nexport const getData = async (url: string) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nexport const getTabs = async (): Promise<Person[]> => {\n  const people = await getData(`${BASE_URL}${API_URL}`);\n\n  return people.map((person: Person, idx: number) => ({\n    ...person,\n    id: idx + 1,\n    father: person.fatherName || '',\n    mother: person.motherName || '',\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n      .filter((child: Person) => (\n        child.fatherName === person.name || child.motherName === person.name\n      ))\n      .map((child: Person) => child.name)\n      .join(', ') || '',\n  }));\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport Nav from './components/Nav';\nimport Main from './components/Main';\nimport { getTabs } from './api/getTabs';\nimport './App.scss';\n\nconst App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTabs().then(setPeople);\n  }, []);\n\n  const history = useHistory();\n  const location = useLocation();\n  const { personName } = useParams();\n  const searchParams = new URLSearchParams(location.search);\n  const queryFromURL = searchParams.get('query') || '';\n  const historyPush = (param: Param, path: string): void => {\n    const params = {\n      ...Object.fromEntries((searchParams.entries())),\n      ...param,\n    };\n    const pathName = path || '';\n\n    for (const key in params) {\n      searchParams.set(key, params[key]);\n    }\n\n    history.push({\n      pathname: `/people/${pathName}`,\n      search: searchParams.toString(),\n    });\n  };\n\n  useEffect(() => {\n    setQuery(queryFromURL);\n  }, [queryFromURL]);\n\n  const updateQueryInURL = (queryStr: string) => {\n    if (queryStr !== '') {\n      historyPush({ query: queryStr }, personName);\n    } else {\n      searchParams.delete('query');\n      historyPush({}, personName);\n    }\n  };\n\n  const applyQuery = useCallback(debounce(updateQueryInURL, 2000), []);\n\n  const lowerQuery = queryFromURL.toLowerCase();\n  const filteredPeople = useMemo(() => (\n    people.filter(({ name }) => name.toLowerCase().includes(lowerQuery))\n  ), [lowerQuery, people]);\n\n  if (!people.length) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav\n        query={query}\n        setQuery={setQuery}\n        applyQuery={applyQuery}\n      />\n      <Main\n        people={filteredPeople}\n        historyPush={historyPush}\n      />\n      <footer className=\"App-Footer\">\n        &copy;Andreas Just 2020\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}