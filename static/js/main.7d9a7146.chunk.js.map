{"version":3,"sources":["components/Nav/Nav.tsx","components/HomePage/HomePage.tsx","components/TableCells/TableCells.tsx","components/Paginator/Paginator.tsx","components/PeopleTable/PeopleTable.tsx","api/getTabs.ts","components/PeoplePege/PeoplePage.tsx","components/ErrorPage/ErrorPage.tsx","components/Main/Main.tsx","App.tsx","index.tsx"],"names":["Nav","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","query","get","Menu","inverted","color","className","Item","as","NavLink","name","to","exact","path","position","Input","placeholder","icon","size","value","onChange","event","param","target","set","delete","push","toString","HomePage","Header","content","TableCells","person","tableHeaders","onSelect","map","code","Table","Cell","cn","TableCells_centenarians","TableCells_aborigine","born","key","onClick","Paginator","page","totalPages","onSelectPage","HeaderCell","colSpan","Pagination","defaultActivePage","onPageChange","ellipsisItem","Icon","firstItem","lastItem","prevItem","nextItem","PeopleTable","people","sortTable","onSelectPerson","celled","Row","Body","id","warning","slug","sex","Footer","getData","url","a","fetch","response","json","getTabs","idx","father","fatherName","mother","motherName","age","died","century","Math","ceil","children","filter","child","join","headersConfig","sortType","field","b","localeCompare","PeoplePage","useState","setPeople","personName","useParams","Number","perPage","sortedBy","length","Object","entries","createTableHeaders","start","round","visiblePeople","RegExp","test","slice","useEffect","then","res","sort","ppl","historyPush","useCallback","params","fromEntries","pathName","pathname","handleSelectPerson","find","parent","some","callback","sortBy","reverse","_","activePage","String","ErrorPage","message","Main","component","from","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d9a7146.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  NavLink, Route, useHistory, useLocation,\n} from 'react-router-dom';\nimport { Input, Menu } from 'semantic-ui-react';\nimport './Nav.scss';\n\nconst Nav = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query: string = searchParams.get('query') || '';\n  const historyPush = (name: string, param: string) => {\n    if (param) {\n      searchParams.set(name, param);\n    } else {\n      searchParams.delete(name);\n    }\n\n    history.push({ search: searchParams.toString() });\n  };\n\n  return (\n    <>\n      <Menu inverted color=\"teal\" className=\"Nav\">\n        <Menu.Item\n          as={NavLink}\n          name=\"home\"\n          to=\"/\"\n          exact\n        />\n        <Menu.Item\n          as={NavLink}\n          name=\"people\"\n          to=\"/people\"\n          exact\n        />\n        <Route path=\"/people\">\n          <Menu.Item position=\"right\">\n            <Input\n              className=\"Nav-Search icon\"\n              placeholder=\"Search...\"\n              icon=\"search\"\n              size=\"mini\"\n              value={query}\n              onChange={(event) => {\n                historyPush('query', event.target.value);\n              }}\n            />\n          </Menu.Item>\n        </Route>\n      </Menu>\n    </>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport { Header } from 'semantic-ui-react';\nimport './HomePage.scss';\n\nconst HomePage = () => (\n  <div className=\"HomePage\">\n    <Header size=\"huge\" content=\"Home Page\" color=\"teal\" />\n  </div>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Table } from 'semantic-ui-react';\nimport './TableCells.scss';\n\ntype Props = {\n  person: Person;\n  tableHeaders: TableHeader[];\n  onSelect: (field: string, person: Person) => void;\n};\n\nconst TableCells: React.FC<Props> = ({ person, tableHeaders, onSelect }) => (\n  <>\n    {tableHeaders.map(({ code }) => (\n      <Table.Cell\n        className={cn('TableCells', {\n          TableCells_centenarians: person[code] >= 65 && code === 'age',\n          TableCells_aborigine: person.born <= 1650 && code === 'name',\n        })}\n        key={code}\n        content={person[code]}\n        onClick={() => onSelect(code, person)}\n      />\n    ))}\n  </>\n);\n\nexport default TableCells;\n","import React from 'react';\n// import cn from 'classnames';\nimport { Icon, Pagination, Table } from 'semantic-ui-react';\nimport './Paginator.scss';\n\ntype Props = {\n  page: number;\n  // perPage: number;\n  totalPages: number;\n  onSelectPage: (_: React.SyntheticEvent, { activePage }: any) => void;\n};\n\nconst Paginator: React.FC<Props> = ({\n  page,\n  totalPages,\n  onSelectPage,\n}) => {\n  return (\n    <Table.HeaderCell colSpan=\"10\" className=\"Pagination\">\n      <Pagination\n        defaultActivePage={page}\n        onPageChange={onSelectPage}\n        ellipsisItem={{ content: <Icon name=\"ellipsis horizontal\" />, icon: true }}\n        firstItem={{ content: <Icon name=\"angle double left\" />, icon: true }}\n        lastItem={{ content: <Icon name=\"angle double right\" />, icon: true }}\n        prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\n        nextItem={{ content: <Icon name=\"angle right\" />, icon: true }}\n        totalPages={totalPages}\n      />\n    </Table.HeaderCell>\n  );\n};\n\nexport default Paginator;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Table } from 'semantic-ui-react';\nimport TableCells from '../TableCells';\nimport Paginator from '../Paginator';\nimport './PeopleTable.scss';\n\ntype Props = {\n  path: string;\n  page: number;\n  totalPages: number;\n  people: Person[];\n  tableHeaders: TableHeader[];\n  sortTable: (arg: string) => void;\n  onSelectPerson: (field: string, person: Person) => void;\n  onSelectPage: (_: React.SyntheticEvent, { activePage }: any) => void;\n};\n\nconst PeopleTable: React.FC<Props> = ({\n  path,\n  page,\n  totalPages,\n  people,\n  tableHeaders,\n  sortTable,\n  onSelectPerson,\n  onSelectPage,\n}) => {\n  return (\n    <Table celled className=\"PeopleTable\">\n      <Table.Header>\n        <Table.Row>\n          {tableHeaders.map(({ name, code }) => (\n            <Table.HeaderCell\n              key={name}\n              content={name}\n              className=\"sort-button\"\n              onClick={() => sortTable(code)}\n            />\n          ))}\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {people.map(person => (\n          <Table.Row\n            key={person.id}\n            warning={person.slug === path}\n            className={cn('PeopleTable-TableRow', {\n              'PeopleTable-TableRow_male': person.sex === 'm',\n              'PeopleTable-TableRow_female': person.sex === 'f',\n            })}\n          >\n            <TableCells\n              person={person}\n              tableHeaders={tableHeaders}\n              onSelect={onSelectPerson}\n            />\n          </Table.Row>\n        ))}\n      </Table.Body>\n\n      <Table.Footer>\n        <Table.Row>\n          <Paginator\n            page={page}\n            totalPages={totalPages}\n            onSelectPage={onSelectPage}\n          />\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n  );\n};\n\nexport default PeopleTable;\n","const BASE_URL = 'https://andreas-just.github.io/library-json';\nconst API_URL = '/people/people-slug.json';\n\nexport const getData = async (url: string) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nexport const getTabs = async (): Promise<Person[]> => {\n  const people = await getData(`${BASE_URL}${API_URL}`);\n\n  return people.map((person: Person, idx: number) => ({\n    ...person,\n    id: idx + 1,\n    father: person.fatherName || '',\n    mother: person.motherName || '',\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n      .filter((child: Person) => (\n        child.fatherName === person.name || child.motherName === person.name\n      ))\n      .map((child: Person) => child.name)\n      .join(', ') || '',\n  }));\n};\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\nimport { Header } from 'semantic-ui-react';\nimport PeopleTable from '../PeopleTable';\nimport { getTabs } from '../../api/getTabs';\nimport './PeoplePage.scss';\n\nconst headersConfig: HeadersConfig = {\n  id: 'Id',\n  name: 'Name',\n  sex: 'Sex',\n  age: 'Age',\n  born: 'Born',\n  died: 'Died',\n  century: 'Century',\n  father: 'Father',\n  mother: 'Mother',\n  children: 'Children',\n};\n\nconst createTableHeaders = (people: Person[]): TableHeader[] => {\n  if (people.length === 0) {\n    return [{ name: 'There are no people', code: '' }];\n  }\n\n  return (\n    Object.entries(headersConfig).map(([key, value]) => ({\n      code: key, name: value,\n    }))\n  );\n};\n\ndeclare type Callback = (arg: string) => (a: Person, b: Person) => number;\n\nconst sortType: Callback = (field) => {\n  switch (field) {\n    case 'id':\n    case 'age':\n    case 'born':\n    case 'died':\n    case 'century':\n      return (a, b) => a[field] - b[field];\n    case 'name':\n    case 'sex':\n    case 'father':\n    case 'mother':\n    case 'children':\n      return (a, b) => a[field].localeCompare(b[field]);\n    default:\n      return () => 0;\n  }\n};\n\ntype Param = {\n  [key: string]: string;\n};\n\nconst PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const history = useHistory();\n  const location = useLocation();\n  const { personName } = useParams();\n  const searchParams = new URLSearchParams(location.search);\n  const query: string = searchParams.get('query') || '';\n  const page: number = Number(searchParams.get('page')) || 1;\n  const perPage: number = Number(searchParams.get('perPage')) || 40;\n  const sortedBy: keyof HeadersConfig = searchParams\n    .get('sortBy') as keyof HeadersConfig || 'id';\n\n  const tableHeaders = createTableHeaders(people);\n  const start = (page - 1) * perPage;\n  const totalPages = Math.round(people.length / perPage);\n  const visiblePeople = people\n    .filter(person => (new RegExp(query, 'i')).test(person.name))\n    .slice(start, start + perPage);\n\n  useEffect(() => {\n    getTabs().then(res => {\n      setPeople(res.sort(sortType(sortedBy)));\n    });\n  }, []);\n\n  useEffect(() => {\n    setPeople(ppl => ppl.sort(sortType(sortedBy)));\n  }, [sortedBy]);\n\n  const historyPush = useCallback((param: Param, path: string): void => {\n    const params = {\n      ...Object.fromEntries((searchParams.entries())),\n      ...param,\n    };\n    const pathName = path || '';\n\n    for (const key in params) {\n      searchParams.set(key, params[key]);\n    }\n\n    history.push({\n      pathname: `/people/${pathName}`,\n      search: searchParams.toString(),\n    });\n  }, [history, searchParams]);\n\n  const handleSelectPerson = useCallback((field, person) => {\n    const path: string | undefined = people\n      .find(parent => parent.name === person[field])?.slug;\n\n    if (field === 'name') {\n      historyPush({}, person.slug);\n    }\n\n    if (path) {\n      if (field === 'mother') {\n        historyPush({}, path);\n      } else if (field === 'father') {\n        historyPush({}, path);\n      }\n    }\n  }, [people, historyPush]);\n\n  const handleSelectPage = (_: React.SyntheticEvent, { activePage }: any) => {\n    historyPush({ page: String(activePage) }, personName);\n  };\n\n  if (!people.length) {\n    return <p>Loading...</p>;\n  }\n\n  if (personName && !people.some(person => person.slug === personName)) {\n    historyPush({}, '');\n  }\n\n  const sortTable = (field: string) => {\n    const callback = sortType(field);\n\n    if (sortedBy !== field) {\n      setPeople([...people].sort(callback));\n      historyPush({ sortBy: field }, personName);\n    } else {\n      setPeople([...people].reverse());\n    }\n  };\n\n  return (\n    <div className=\"PeoplePage\">\n      <Header size=\"huge\" content=\"People table\" color=\"teal\" />\n\n      <PeopleTable\n        people={visiblePeople}\n        tableHeaders={tableHeaders}\n        sortTable={sortTable}\n        onSelectPerson={handleSelectPerson}\n        onSelectPage={handleSelectPage}\n        path={personName}\n        page={page}\n        totalPages={totalPages}\n      />\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\n\ntype Props = {\n  message: string;\n};\n\nconst ErrorPage: React.FC<Props> = ({ message }) => <h2>{message}</h2>;\n\nexport default ErrorPage;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport HomePage from '../HomePage';\nimport PeoplePage from '../PeoplePege';\nimport ErrorPage from '../ErrorPage';\nimport './Main.scss';\n\nconst Main = () => {\n  return (\n    <div className=\"Main\">\n      <Switch>\n        <Route\n          path=\"/people/:personName?\"\n          component={PeoplePage}\n        />\n\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Redirect from=\"/home\" to=\"/\" />\n\n        <Route path=\"/error\">\n          <ErrorPage message=\"Not found\" />\n        </Route>\n        <Redirect from=\"/*\" to=\"/error\" />\n\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport Nav from './components/Nav';\nimport Main from './components/Main';\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <header>\n      <Nav />\n    </header>\n\n    <Main />\n    <footer className=\"App-Footer\">\n      &copy;Andreas Just 2020\n    </footer>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}