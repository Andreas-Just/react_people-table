{"version":3,"sources":["components/Nav/Nav.tsx","components/HomePage/HomePage.tsx","components/TableCells/TableCells.tsx","components/Paginator/Paginator.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePege/PeoplePage.tsx","components/FormField/FormField.tsx","components/common/Messages/Messages.tsx","helpers/validators.ts","components/AddPerson/AddPerson.tsx","components/ErrorPage/ErrorPage.tsx","components/Main/Main.tsx","components/common/Spinner/Spinner.tsx","api/getTabs.ts","components/common/BackgroundAnimation/BackgroundAnimation.tsx","App.tsx","index.tsx"],"names":["optionQuery","Nav","query","setQuery","applyQuery","Menu","inverted","color","className","Item","as","NavLink","name","to","exact","path","position","Input","placeholder","icon","size","value","onChange","target","pattern","maxLength","queryStr","replace","slice","HomePage","Segment","Header","content","TableCells","person","tableHeaders","onSelect","map","code","Table","Cell","cn","TableCells_centenarians","TableCells_aborigine","born","key","onClick","options","text","Paginator","page","perPage","totalPages","onSelectPage","onSelectPerPage","HeaderCell","colSpan","Dropdown","floated","selection","direction","Pagination","activePage","onPageChange","ellipsisItem","Icon","prevItem","disabled","firstItem","nextItem","lastItem","PeopleTable","React","memo","people","sortedBy","isSortedAsc","onSortTable","onSelectPerson","celled","Row","Body","id","active","slug","sex","Footer","headersConfig","age","died","century","fatherName","motherName","children","PeoplePage","historyPush","location","useLocation","personName","useParams","searchParams","URLSearchParams","search","Number","get","length","Object","entries","createTableHeaders","sortedPeople","useMemo","callback","field","a","b","localeCompare","sortType","result","sort","reverse","reckon","Math","ceil","start","visiblePeople","some","sortBy","sortOrder","find","parent","_","String","param","genderOptions","FormField","label","error","onBlur","fatherOptions","reduce","arr","push","motherOptions","Form","Select","width","MessageWarning","Message","warning","header","MessageSuccess","isValid","allFilled","success","required","validYears","Date","getFullYear","validName","test","minLength","fieldConfigs","validators","defaultValues","emptyErrors","AddPerson","addPerson","useState","values","setValues","errors","setErrors","every","Boolean","useCallback","err","validateField","config","Error","validator","filter","join","handleChange","event","usefulness","patternName","patternYear","maxLengthName","maxLengthYear","vals","handleBlur","noMistakes","onSubmit","preventDefault","newErrors","forEach","Group","Button","ErrorPage","message","Main","render","from","Spinner","getData","url","fetch","response","json","getTabs","idx","father","mother","child","BackgroundAnimation","App","setPeople","setId","useEffect","then","history","useHistory","queryFromURL","params","fromEntries","pathName","set","pathname","toString","debounce","delete","lowerQuery","toLowerCase","filteredPeople","includes","split","newPerson","ReactDOM","document","getElementById"],"mappings":"siBAKMA,G,OACO,IADPA,EAEK,YAyDIC,EAhDc,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAC/C,OACE,oCACE,kBAACC,EAAA,EAAD,CAAMC,UAAQ,EAACC,MAAM,OAAOC,UAAU,OACpC,kBAACH,EAAA,EAAKI,KAAN,CACEC,GAAIC,IACJC,KAAK,OACLC,GAAG,IACHC,OAAK,IAEP,kBAACT,EAAA,EAAKI,KAAN,CACEC,GAAIC,IACJC,KAAK,SACLC,GAAG,UACHC,OAAK,IAEP,kBAACT,EAAA,EAAKI,KAAN,CACEC,GAAIC,IACJC,KAAK,aACLC,GAAG,cACHC,OAAK,IAEP,kBAAC,IAAD,CAAOC,KAAK,WACV,kBAACV,EAAA,EAAKI,KAAN,CAAWO,SAAS,SAClB,kBAACC,EAAA,EAAD,CACET,UAAU,kBACVU,YAAY,YACZC,KAAK,SACLC,KAAK,OACLC,MAAOnB,EACPoB,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACHC,EAAuBxB,EAAdyB,EAAczB,EACzB0B,EAAWH,EAAOF,MACrBM,QAAQH,EAAS,IACjBG,QAAQ,UAAW,KACnBC,MAAM,EAAGH,GAEZtB,EAASuB,GACTtB,EAAWsB,W,kBCvBZG,G,OA3BE,kBACf,oCACE,yBAAKrB,UAAU,YACb,kBAACsB,EAAA,EAAD,CACEtB,UAAU,oBAEV,kBAACuB,EAAA,EAAD,CACEC,QAAQ,uCACRxB,UAAU,kBACVY,KAAK,OACLb,MAAM,SAER,kBAACwB,EAAA,EAAD,CACEvB,UAAU,gBACVY,KAAK,QACLb,MAAM,QAHR,6P,yCCWO0B,G,OAhBqB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,aAAcC,EAAzB,EAAyBA,SAAzB,OAClC,oCACGD,EAAaE,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChB,kBAACC,EAAA,EAAMC,KAAP,CACEhC,UAAWiC,IAAG,aAAc,CAC1BC,wBAAyBR,EAAOI,IAAS,IAAe,QAATA,EAC/CK,qBAAsBT,EAAOU,MAAQ,MAAiB,SAATN,IAE/CO,IAAKP,EACLN,QAASE,EAAOI,GAChBQ,QAAS,kBAAMV,EAASE,EAAMJ,Y,kBCjBhCa,EAAU,CACd,CAAEF,IAAK,EAAGG,KAAM,WAAY3B,MAAO,GACnC,CAAEwB,IAAK,EAAGG,KAAM,YAAa3B,MAAO,IACpC,CAAEwB,IAAK,EAAGG,KAAM,YAAa3B,MAAO,IACpC,CAAEwB,IAAK,EAAGG,KAAM,YAAa3B,MAAO,KAmEvB4B,EAxDoB,SAAC,GAM7B,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEA,OACE,kBAACf,EAAA,EAAMgB,WAAP,CAAkBC,QAAQ,KAAKhD,UAAU,cACvC,kBAACiD,EAAA,EAAD,CACEvC,YAAY,yBACZwC,QAAQ,OACRC,WAAS,EACT/C,KAAK,UACLS,MAAO8B,EACP7B,SAAUgC,EACVP,QAASA,EACTa,UAAU,UAEK,IAAfR,GAEE,kBAACS,EAAA,EAAD,CACEH,QAAQ,QACRI,WAAYZ,EACZa,aAAcV,EACdW,aAAc,CACZhC,QAAS,kBAACiC,EAAA,EAAD,CAAMrD,KAAK,wBACpBO,MAAM,GAER+C,SAAU,CACRlC,QAAS,kBAACiC,EAAA,EAAD,CAAMrD,KAAK,eACpBuD,SAAmB,IAATjB,EACV/B,MAAM,GAERiD,UAAW,CACTpC,QAAS,kBAACiC,EAAA,EAAD,CAAMrD,KAAK,sBACpBuD,SAAmB,IAATjB,EACV/B,MAAM,GAERkD,SAAU,CACRrC,QAAS,kBAACiC,EAAA,EAAD,CAAMrD,KAAK,gBACpBuD,SAAUjB,IAASE,EACnBjC,MAAM,GAERmD,SAAU,CACRtC,QAAS,kBAACiC,EAAA,EAAD,CAAMrD,KAAK,uBACpBuD,SAAUjB,IAASE,EACnBjC,MAAM,GAERiC,WAAYA,MC8BTmB,G,OA5EsBC,IAAMC,MACzC,YAaO,IAZL1D,EAYI,EAZJA,KACAmC,EAWI,EAXJA,KACAC,EAUI,EAVJA,QACAC,EASI,EATJA,WACAsB,EAQI,EARJA,OACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,YACAzC,EAKI,EALJA,aACA0C,EAII,EAJJA,YACAC,EAGI,EAHJA,eACAzB,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEA,OACE,kBAACf,EAAA,EAAD,CAAOwC,QAAM,EAACvE,UAAU,cAAcD,MAAM,OAAOD,UAAQ,GACzD,kBAACiC,EAAA,EAAMR,OAAP,CAAcvB,UAAU,2BACtB,kBAAC+B,EAAA,EAAMyC,IAAP,CAAWxE,UAAU,wBAClB2B,EAAaE,KAAI,gBAAGzB,EAAH,EAAGA,KAAM0B,EAAT,EAASA,KAAT,OAChB,kBAACC,EAAA,EAAMgB,WAAP,CACEV,IAAKP,EACL9B,UAAU,yBACVsC,QAAS,kBAAM+B,EAAYvC,KAE1BqC,IAAarC,GACZ,kBAAC2B,EAAA,EAAD,CACErD,KACEgE,EAAc,oBAAsB,kBAEtCpE,UAAU,qBAGbI,QAMT,kBAAC2B,EAAA,EAAM0C,KAAP,CAAYzE,UAAU,yBACnBkE,EAAOrC,KAAI,SAAAH,GAAM,OAChB,kBAACK,EAAA,EAAMyC,IAAP,CACEnC,IAAKX,EAAOgD,GACZC,OAAQjD,EAAOkD,OAASrE,EACxBP,UAAWiC,IAAG,CACZ,wBAAwB,EACxB,4BAA4C,MAAfP,EAAOmD,IACpC,8BAA8C,MAAfnD,EAAOmD,OAGxC,kBAAC,EAAD,CACEnD,OAAQA,EACRC,aAAcA,EACdC,SAAU0C,SAMlB,kBAACvC,EAAA,EAAM+C,OAAP,KACE,kBAAC/C,EAAA,EAAMyC,IAAP,CAAWxE,UAAU,wBACnB,kBAAC,EAAD,CACE0C,KAAMA,EACNC,QAASA,EACTC,WAAYA,EACZC,aAAcA,EACdC,gBAAiBA,WClFzBiC,G,OAA+B,CACnCL,GAAI,KACJtE,KAAM,OACNyE,IAAK,MACLG,IAAK,MACL5C,KAAM,OACN6C,KAAM,OACNC,QAAS,UACTC,WAAY,SACZC,WAAY,SACZC,SAAU,aA0JGC,EAjHqBtB,IAAMC,MACxC,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQqB,EAAkB,EAAlBA,YACHC,EAAWC,cACTC,EAAeC,cAAfD,WAEFE,EAAe,IAAIC,gBAAgBL,EAASM,QAC5CpD,EAAeqD,OAAOH,EAAaI,IAAI,UAAY,EACnDrD,EAAkBoD,OAAOH,EAAaI,IAAI,aAAe,EACzD5B,EAAgD,SAAlCwB,EAAaI,IAAI,aAC/B7B,EAAgCyB,EACnCI,IAAI,WAAoC,KAErCrE,EAlDiB,SAACuC,GAC1B,OAAsB,IAAlBA,EAAO+B,OACF,CAAC,CAAE7F,KAAM,sBAAuB0B,KAAM,KAI7CoE,OAAOC,QAAQpB,GAAelD,KAAI,yCAAmB,CACnDC,KADgC,KACrB1B,KADqB,SA4CbgG,CAAmBlC,GAElCmC,EAAeC,mBAAQ,WAC3B,IAAMC,EAvCe,SAACC,GAC1B,OAAQA,GACN,IAAK,KACL,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,UACH,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAED,GAASE,EAAEF,IAChC,IAAK,OACL,IAAK,MACL,IAAK,aACL,IAAK,aACL,IAAK,WACH,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAED,GAAOG,cAAcD,EAAEF,KAC5C,QACE,OAAO,kBAAM,IAwBII,CAASzC,GACpB0C,EAAS,YAAI3C,GAAQ4C,KAAKP,GAMhC,OAJKnC,GACHyC,EAAOE,UAGFF,IACN,CAAC3C,EAAQC,EAAUC,IAEhBxB,EAAa0D,mBAAQ,WACzB,IAAMU,EAASC,KAAKC,KAAKb,EAAaJ,OAAStD,GAM/C,OAJIuB,EAAO+B,QAAUvD,EAAOsE,GAC1BzB,EAAY,CAAE7C,KAAM,IAAKC,QAAS,KAAO+C,GAGpCsB,IACN,CAACtE,EAAMC,EAAS0D,EAAcX,EAAYxB,EAAQqB,IAE/C4B,GAASzE,EAAO,GAAKC,EACrByE,EAAgBd,mBAAQ,kBAC5BD,EAAajF,MAAM+F,EAAOA,EAAQxE,KACjC,CAAC0D,EAAcc,EAAOxE,IAErB+C,IAAexB,EAAOmD,MAAK,SAAA3F,GAAM,OAAIA,EAAOkD,OAASc,MACvDH,EAAY,GAAI,IA2ClB,OACE,yBAAKvF,UAAU,cACb,kBAACuB,EAAA,EAAD,CACEC,QAAQ,eACRxB,UAAU,aACVY,KAAK,OACLb,MAAM,SAGR,kBAAC,EAAD,CACE4B,aAAcA,EACduC,OAAQkD,EACRjD,SAAUA,EACVC,YAAaA,EACbxB,WAAYA,EACZF,KAAMA,EACNC,QAASA,EACTpC,KAAMmF,EACNrB,YA/BkB,SAACmC,GAErBjB,EADEpB,IAAaqC,EACH,CACVc,OAAQd,EACRe,UAAW,OAGD,CACVA,UAAWnD,EAAc,OAAS,OAHjCsB,IA2BDpB,eAjDqB,SAACkC,EAAe9E,GAAoB,IAAD,EACtDnB,EAAwB,UAAG2D,EAC9BsD,MAAK,SAAAC,GAAM,OAAIA,EAAOrH,OAASsB,EAAO8E,aADX,aAAG,EACiB5B,KAEpC,SAAV4B,GACFjB,EAAY,GAAI7D,EAAOkD,MAGrBrE,IACY,WAAViG,GAEiB,WAAVA,IADTjB,EAAY,GAAIhF,IAwChBsC,aA5DmB,SAAC6E,EAAD,GAAmD,IAAvBpE,EAAsB,EAAtBA,WACnDiC,EAAY,CAAE7C,KAAMiF,OAAOrE,IAAeoC,IA4DtC5C,gBAzDsB,SAAC4E,EAAD,GAAoD,IAAxBtH,EAAuB,EAAvBA,KAAMS,EAAiB,EAAjBA,MACtD+G,EAAK,eAAMxH,EAAOuH,OAAO9G,IAE/B0E,EAAYqC,EAAOlC,U,kBCvGnBmC,G,OAAqC,CACzC,CAAExF,IAAK,OAAQG,KAAM,OAAQ3B,MAAO,KACpC,CAAEwB,IAAK,SAAUG,KAAM,SAAU3B,MAAO,OA6G3BiH,EA7FoB,SAAC,GAW7B,IAVLpD,EAUI,EAVJA,GACAtE,EASI,EATJA,KACAS,EAQI,EARJA,MACAkH,EAOI,EAPJA,MAOI,IANJ3F,YAMI,MANG,GAMH,MALJ8B,cAKI,MALK,GAKL,MAJJxD,mBAII,MAJU,GAIV,MAHJsH,aAGI,MAHI,GAGJ,EAFJlH,EAEI,EAFJA,SAEI,IADJmH,cACI,MADK,aACL,EACEC,EAAa,OAAGhE,QAAH,IAAGA,OAAH,EAAGA,EAAQiE,QAAO,SAACC,EAA0B1G,GAS9D,MARmB,MAAfA,EAAOmD,KAAenD,EAAOU,MAAQA,GAAQV,EAAOuD,MAAQ7C,GAC9DgG,EAAIC,KAAK,CACPhG,IAAKsF,OAAOjG,EAAOgD,IACnBlC,KAAMd,EAAOtB,KACbS,MAAOa,EAAOtB,OAIXgI,IACN,IAEGE,EAAa,OAAGpE,QAAH,IAAGA,OAAH,EAAGA,EAAQiE,QAAO,SAACC,EAA0B1G,GAS9D,MARmB,MAAfA,EAAOmD,KAAenD,EAAOU,MAAQA,GAAQV,EAAOuD,MAAQ7C,GAC9DgG,EAAIC,KAAK,CACPhG,IAAKsF,OAAOjG,EAAOgD,IACnBlC,KAAMd,EAAOtB,KACbS,MAAOa,EAAOtB,OAIXgI,IACN,IAEG7F,EAAU+D,mBAAQ,WACtB,MAAa,eAATlG,EACK8H,EAGI,eAAT9H,EACKkI,EAGFT,IACN,CAACzH,EAAM8H,EAAeI,IAEzB,OACE,oCACY,QAATlI,GAA2B,eAATA,GAAkC,eAATA,EAExC,kBAACmI,EAAA,EAAKC,OAAN,CACExI,UAAWiC,IAAG,CACZ,oBAAoB,EACpB,0BAAoC,QAAT7B,IAE7BqI,MAAO,GACPjG,KACY,eAATpC,GAAkC,eAATA,GAA2BgC,EACzB,GAAxB,sBAENG,QAASA,EACTyF,QAASA,GAAS,CAAExG,QAASwG,GAC7BrE,UAAoB,eAATvD,GAAkC,eAATA,KAA2BgC,EAC/DsC,GAAIA,EACJtE,KAAMA,EACN2H,MAAOA,EACPrH,YAAaA,EACbG,MAAOA,EACPC,SAAUA,EACVmH,OAAQA,IAIV,kBAACM,EAAA,EAAK9H,MAAN,CACET,UAAU,kBACVyI,MAAgB,SAATrI,GAA4B,SAATA,EAAkB,EAAI,GAChD4H,QAASA,GAAS,CAAExG,QAASwG,GAC7BrE,SAAmB,SAATvD,IAAoBgC,EAC9BsC,GAAIA,EACJtE,KAAMA,EACN2H,MAAOA,EACPrH,YAAaA,EACbG,MAAOA,EACPC,SAAUA,EACVmH,OAAQA,M,SCpGPS,G,OAAiB,kBAC5B,kBAACC,EAAA,EAAD,CACE3I,UAAU,UACV4I,SAAO,EACPC,OAAO,WACPrH,QAAQ,0CAICsH,EAAyC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACpD,kBAACL,EAAA,EAAD,CACE3I,UAAU,UACViJ,QAASF,GAAWC,EACpBH,OAAO,WACPrH,QAAQ,8C,SCpBC0H,EAAsB,SAAC9I,EAAMS,GACxC,OAAIA,EACK,GAGH,GAAN,OAAUT,EAAV,iBAGW+I,EAAwB,SAAC/I,EAAMS,GAC1C,OAAQA,EAAQ,OAASA,GAAQ,IAAIuI,MAAOC,cAArC,UACAjJ,EADA,oDAEH,IASOkJ,EAAuB,SAAClJ,EAAMS,GAGzC,OAFiB,YAAG,oVAAH,2DAEE0I,KAAK1I,GACpB,GADG,UAEAT,EAFA,mBAKIoJ,EAAY,SAACvD,GACxB,OAAO,SAAC7F,EAAMS,GACZ,OAAQA,GAAUA,EAAMoF,QAAUA,EAC9B,GADG,UAEA7F,EAFA,iCAE6B6F,EAF7B,iBC1BLzG,G,OACW,IADXA,EAEW,EAFXA,EAGS,aAHTA,EAIS,UAcTiK,EAA8B,CAClC,CACErJ,KAAM,OACN2H,MAAO,YACPrH,YAAa,kBACbgJ,WAAY,CAACR,EAAUI,EAAWE,EAAU,KAE9C,CACEpJ,KAAM,OACN2H,MAAO,gBACPrH,YAAa,sBACbgJ,WAAY,CAACR,EAAUC,IAEzB,CACE/I,KAAM,OACN2H,MAAO,gBACPrH,YAAa,0BACbgJ,WAAY,CAACR,EAAUC,EDzBQ,SAAC/I,EAAMS,EAAOuB,GAC/C,OAAOA,IAASvB,GAASuB,GAAQ,MAAQvB,IAAUuB,EAC/C,GADG,UAEAhC,EAFA,gFC0BP,CACEA,KAAM,MACN2H,MAAO,SACPrH,YAAa,gBACbgJ,WAAY,CAACR,IAEf,CACE9I,KAAM,aACN2H,MAAO,uBACPrH,YAAa,qCACbgJ,WAAY,CAACJ,EAAWE,EAAU,KAEpC,CACEpJ,KAAM,aACN2H,MAAO,uBACPrH,YAAa,qCACbgJ,WAAY,CAACJ,EAAWE,EAAU,KAEpC,CACEpJ,KAAM,WACN2H,MAAO,yBACPrH,YAAa,mCACbgJ,WAAY,CAACJ,EAAWE,EAAU,MAIhCG,EAAiC,CACrCvJ,KAAM,GACNgC,KAAM,GACN6C,KAAM,GACNJ,IAAK,GACLM,WAAY,GACZC,WAAY,GACZC,SAAU,IAENuE,EAA+B,CACnCxJ,KAAM,GACNgC,KAAM,GACN6C,KAAM,GACNJ,IAAK,GACLM,WAAY,GACZC,WAAY,GACZC,SAAU,IA8LGwE,GApLoB,SAAC,GAA2B,IAAzB3F,EAAwB,EAAxBA,OAAQ4F,EAAgB,EAAhBA,UAAgB,EAChCC,mBAASJ,GADuB,mBACrDK,EADqD,KAC7CC,EAD6C,OAEhCF,mBAASH,GAFuB,mBAErDM,EAFqD,KAE7CC,EAF6C,KAGtDnB,EAAY1C,mBAAQ,kBAAMJ,OAAO8D,OAAOA,GAAQI,MAAMC,WAAU,CAACL,IACjEjB,EAAUuB,uBAAY,SAACC,GAAD,OACzBrE,OAAO8D,OAAOO,GAAKlD,KAAKgD,WACxB,IAEGG,EAAgB,SACpBpK,EACAS,EACAkH,GAEI,IADJ3F,EACG,uDADI,GAEDqI,EAAShB,EAAajC,MAAK,SAAAhB,GAAK,OAAIA,EAAMpG,OAASA,KAEzD,IAAKqK,EACH,MAAM,IAAIC,MAAJ,yBAA4BtK,EAA5B,MAJL,MAOyBqK,EAApBf,kBAPL,MAOkB,GAPlB,EASH,OAAOA,EACJ7H,KAAI,SAAA8I,GAAS,OAAIA,EAAU5C,EAAOlH,EAAOuB,MACzCwI,OAAOP,SACPQ,KAAK,OAuBJC,EAAe,SACnBC,EADmB,GAEf,IAD2B3K,EAC5B,EAD4BA,KAAMS,EAClC,EADkCA,MAErC,GAAKkK,EAAMhK,OAAX,CADG,IASCiK,EAHFC,EAEEzL,EAFW0L,EAEX1L,EADF2L,EACE3L,EADa4L,EACb5L,EAIFwL,EADW,SAAT5K,GAA4B,SAATA,EACRS,EAAMM,QAAQ+J,EAAa,IAAI9J,MAAM,EAAGgK,GAExCvK,EAAMM,QAAQ8J,EAAa,IACrC9J,QAAQ,UAAW,KACnBC,MAAM,EAAG+J,GAGdlB,GAAU,SAAAoB,GAAI,kCACTA,GADS,kBAEXjL,EAAO4K,SAINM,EAAa,SAACP,GAClB,IAAMvE,EAASuE,EAAMhK,OAA2BX,KAC1C2H,EAAiBgD,EAAMhK,OAA2B2D,GAExD,OAAQqD,GACN,IAAK,SACHoC,GAAU,SAAAI,GAAG,kCACRA,GADQ,IAEX1F,IAAKqE,EAASnB,EAAOiC,EAAOnF,UAE9B,MACF,IAAK,uBACHsF,GAAU,SAAAI,GAAG,kCACRA,GADQ,IAEXpF,WAAYmE,EAAUvB,EAAOiC,EAAO7E,iBAEtC,MACF,IAAK,uBACHgF,GAAU,SAAAI,GAAG,kCACRA,GADQ,IAEXnF,WAAYkE,EAAUvB,EAAOiC,EAAO5E,iBAEtC,MACF,IAAK,gBACH+E,GAAU,SAAAI,GAAG,kCACRA,GADQ,kBAEV/D,EAAQgE,EAAchE,EAAOwD,EAAOxD,GAAQuB,EAAOiC,EAAO5H,WAE7D,MACF,QACE+H,GAAU,SAAAI,GAAG,kCACRA,GADQ,kBAEV/D,EAAQgE,EAAchE,EAAOwD,EAAOxD,GAAQuB,UAK/CwD,EAAaxC,EAAQmB,GAE3B,OACE,yBAAKlK,UAAU,aACb,kBAACuB,EAAA,EAAD,CACEC,QAAQ,2BACRxB,UAAU,8BACVY,KAAK,OACLb,MAAM,SAER,kBAACwI,EAAA,EAAD,CACEvI,UAAU,iBACV4I,SAAO,EACPK,QAASsC,GAAcvC,EACvBwC,SAlGe,SAACT,GACpBA,EAAMU,iBAEN,IAAMC,EAA0B,eAAQ9B,GAExCH,EAAakC,SAAQ,YAAsB,IAAnBvL,EAAkB,EAAlBA,KAAM2H,EAAY,EAAZA,MAC5B2D,EAAUtL,GAAQoK,EAAcpK,EAAM4J,EAAO5J,GAAO2H,EAAOiC,EAAO5H,SAG/D2G,EAAQ2C,IAMb5B,EAAUE,GACVC,EAAUN,GACVQ,EAAUP,IAPRO,EAAUuB,KA0FR,kBAACnD,EAAA,EAAKqD,MAAN,CAAY5L,UAAU,uBACnByJ,EAAa5H,KAAI,gBAAGzB,EAAH,EAAGA,KAAM2H,EAAT,EAASA,MAAOrH,EAAhB,EAAgBA,YAAhB,MACP,SAATN,GAA4B,SAATA,EACjB,kBAAC,EAAD,CACEiC,IAAKjC,EACLsE,GAAIqD,EACJ3H,KAAMA,EACN2H,MAAOA,EACP3F,KAAM4H,EAAO5H,KACb1B,YAAaA,EACbG,MAAOmJ,EAAO5J,GACd4H,MAAOkC,EAAO9J,GACdU,SAAUgK,EACV7C,OAAQqD,IAGV,kBAAC/C,EAAA,EAAKqD,MAAN,CAAY5L,UAAU,sBAAsBqC,IAAKjC,GAC/C,kBAAC,EAAD,CACEsE,GAAIqD,EACJ3H,KAAMA,EACN2H,MAAOA,EACP3F,KAAM4H,EAAO5H,KACb8B,OAAQA,EACRxD,YAAaA,EACbG,MAAOmJ,EAAO5J,GACd4H,MAAOkC,EAAO9J,GACdU,SAAUgK,EACV7C,OAAQqD,SAMlB,kBAAC/C,EAAA,EAAKqD,MAAN,CAAY5L,UAAU,uBAElBuL,GAAcvC,EACV,kBAAC,EAAD,CAAgBD,QAASwC,EAAYvC,UAAWA,IAChD,kBAAC,EAAD,OAGR,kBAACT,EAAA,EAAKqD,MAAN,CAAY5L,UAAU,uBACpB,kBAAC6L,EAAA,EAAD,CACE7L,UAAU,mBACVwB,QAAQ,aACRzB,MAAM,aCpQH+L,GAFoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAKA,ICiD1CC,I,OAvCe,SAAC,GAAwC,IAAtC9H,EAAqC,EAArCA,OAAQqB,EAA6B,EAA7BA,YAAauE,EAAgB,EAAhBA,UACpD,OACE,yBAAK9J,UAAU,QACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEO,KAAK,cACL0L,OAAQ,kBACN,kBAAC,GAAD,CACE/H,OAAQA,EACR4F,UAAWA,OAKjB,kBAAC,IAAD,CACEvJ,KAAK,uBACL0L,OAAQ,kBACN,kBAAC,EAAD,CACE/H,OAAQA,EACRqB,YAAaA,OAKnB,kBAAC,IAAD,CAAOhF,KAAK,IAAID,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAU4L,KAAK,QAAQ7L,GAAG,MAE1B,kBAAC,IAAD,CAAOE,KAAK,UACV,kBAAC,GAAD,CAAWwL,QAAQ,eAErB,kBAAC,IAAD,CAAUG,KAAK,KAAK7L,GAAG,eC7BhB8L,I,OAhBC,kBACd,yBAAKnM,UAAU,WACb,wBAAIA,UAAU,oBAAd,MAEE,0BAAMA,UAAU,aAAhB,KAFF,UAKA,yBAAKA,UAAU,kBACb,0BAAMA,UAAU,iBAChB,0BAAMA,UAAU,iBAChB,0BAAMA,UAAU,iBAChB,0BAAMA,UAAU,qB,8BCXToM,GAAO,yCAAG,WAAOC,GAAP,gBAAA5F,EAAA,sEACE6F,MAAMD,GADR,cACfE,EADe,yBAGdA,EAASC,QAHK,2CAAH,sDAMPC,GAAO,yCAAG,6BAAAhG,EAAA,sEACA2F,GAAQ,GAAD,OAVb,+CAUa,OATd,6BAQO,cACflI,EADe,yBAGdA,EAAOrC,KAAI,SAACH,EAAgBgL,GAAjB,mBAAC,eACdhL,GADa,IAEhBgD,GAAIgI,EAAM,EACVC,OAAQjL,EAAOyD,YAAc,GAC7ByH,OAAQlL,EAAO0D,YAAc,GAC7BJ,IAAKtD,EAAOuD,KAAOvD,EAAOU,KAC1B8C,QAAS+B,KAAKC,KAAKxF,EAAOuD,KAAO,KACjCI,SAAUnB,EACP0G,QAAO,SAACiC,GAAD,OACNA,EAAM1H,aAAezD,EAAOtB,MAAQyM,EAAMzH,aAAe1D,EAAOtB,QAEjEyB,KAAI,SAACgL,GAAD,OAAmBA,EAAMzM,QAC7ByK,KAAK,OAAS,SAfE,2CAAH,qDCMLiC,I,cAZa,kBAC1B,yBAAK9M,UAAU,QACb,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,SACf,yBAAKA,UAAU,YCgHJ+M,GAjHH,WAAO,IAAD,EACYhD,mBAAmB,IAD/B,mBACT7F,EADS,KACD8I,EADC,OAEIjD,mBAAiB,GAFrB,mBAETrF,EAFS,KAELuI,EAFK,OAGUlD,mBAAS,IAHnB,mBAGTrK,EAHS,KAGFC,EAHE,KAKhBuN,qBAAU,WACRT,KAAUU,MAAK,SAAAZ,GACbS,EAAUT,GACVU,EAAMV,EAAStG,OAAS,QAEzB,IAEH,IAAMmH,EAAUC,cACV7H,EAAWC,cACTC,EAAeC,cAAfD,WACFE,EAAe,IAAIC,gBAAgBL,EAASM,QAC5CwH,EAAe1H,EAAaI,IAAI,UAAY,GAC5CT,EAAc,SAACqC,EAAcrH,GACjC,IAAMgN,EAAM,2BACPrH,OAAOsH,YAAa5H,EAAaO,YACjCyB,GAEC6F,EAAWlN,GAAQ,GAEzB,IAAK,IAAM8B,KAAOkL,EAChB3H,EAAa8H,IAAIrL,EAAKkL,EAAOlL,IAG/B+K,EAAQ/E,KAAK,CACXsF,SAAS,WAAD,OAAaF,GACrB3H,OAAQF,EAAagI,cAIzBV,qBAAU,WACRvN,EAAS2N,KACR,CAACA,IAEJ,IASM1N,EAAa0K,sBAAYuD,KATN,SAAC3M,GACP,KAAbA,EACFqE,EAAY,CAAE7F,MAAOwB,GAAYwE,IAEjCE,EAAakI,OAAO,SACpBvI,EAAY,GAAIG,MAIsC,KAAO,IAE3DqI,EAAaT,EAAaU,cAC1BC,EAAiB3H,mBAAQ,kBAC7BpC,EAAO0G,QAAO,qBAAGxK,KAAgB4N,cAAcE,SAASH,QACvD,CAACA,EAAY7J,IAqChB,OAAKA,EAAO+B,OAKV,yBAAKjG,UAAU,OACb,kBAAC,EAAD,CACEN,MAAOA,EACPC,SAAUA,EACVC,WAAYA,IAEd,kBAAC,GAAD,CACEsE,OAAQ+J,EACR1I,YAAaA,EACbuE,UAjDY,SAAC,GAEK,IADtB1J,EACqB,EADrBA,KAAMgC,EACe,EADfA,KAAM6C,EACS,EADTA,KAAMJ,EACG,EADHA,IAAKM,EACF,EADEA,WAAYC,EACd,EADcA,WAAYC,EAC1B,EAD0BA,SAEzCL,GAAOC,GAAQ7C,EACf8C,GAAWD,EAAO,MAAQ,GAAKA,EAAO,IAAMgC,KAAKC,MAAMjC,EAAO,KAC9DL,EAAI,UAAMxE,EAAK4N,cAAcG,MAAM,KAAKtD,KAAK,KAAzC,YAAiDzI,GAErDgM,EAAoB,CACxBhO,OACAyE,MACAG,MACA5C,MAAOA,EACP6C,MAAOA,EACPC,UACAC,aACAC,aACAC,WACAT,OACAF,MAGFsI,EAAU,GAAD,mBAAK9I,GAAL,CAAakK,KACtBnB,EAAMvI,EAAK,GAEXa,EACE,CACE+B,OAAQ,OACRC,UAAW,MACX5E,QAAS,KACTjD,MAAOU,EAAKgB,MAAM,EAAG,IAEvBwD,MAoBA,4BAAQ5E,UAAU,cAAlB,yBAGA,kBAAC,GAAD,OAlBK,kBAAC,GAAD,OC9FXqO,IAASpC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFqC,SAASC,eAAe,W","file":"static/js/main.d95f88ad.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport { Input, Menu } from 'semantic-ui-react';\nimport './Nav.scss';\n\nconst optionQuery = {\n  maxLength: 50,\n  pattern: /[^a-z ]/ig,\n};\n\ntype Props = {\n  query: string;\n  setQuery: (val: string) => void;\n  applyQuery: (val: string) => void;\n};\n\nconst Nav: React.FC<Props> = ({ query, setQuery, applyQuery }) => {\n  return (\n    <>\n      <Menu inverted color=\"teal\" className=\"Nav\">\n        <Menu.Item\n          as={NavLink}\n          name=\"home\"\n          to=\"/\"\n          exact\n        />\n        <Menu.Item\n          as={NavLink}\n          name=\"people\"\n          to=\"/people\"\n          exact\n        />\n        <Menu.Item\n          as={NavLink}\n          name=\"add person\"\n          to=\"/add-person\"\n          exact\n        />\n        <Route path=\"/people\">\n          <Menu.Item position=\"right\">\n            <Input\n              className=\"Nav-Search icon\"\n              placeholder=\"Search...\"\n              icon=\"search\"\n              size=\"mini\"\n              value={query}\n              onChange={({ target }) => {\n                const { pattern, maxLength } = optionQuery;\n                const queryStr = target.value\n                  .replace(pattern, '')\n                  .replace(/\\s{2,}/g, ' ')\n                  .slice(0, maxLength);\n\n                setQuery(queryStr);\n                applyQuery(queryStr);\n              }}\n            />\n          </Menu.Item>\n        </Route>\n      </Menu>\n    </>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport { Header, Segment } from 'semantic-ui-react';\nimport './HomePage.scss';\n\nconst HomePage = () => (\n  <>\n    <div className=\"HomePage\">\n      <Segment\n        className=\"HomePage-Wrapper\"\n      >\n        <Header\n          content=\"Welcome to the People Table project!\"\n          className=\"HomePage-Header\"\n          size=\"huge\"\n          color=\"teal\"\n        />\n        <Header\n          className=\"HomePage-Text\"\n          size=\"large\"\n          color=\"teal\"\n        >\n          Here you can download and view the list of people in the form of a\n          table, as well as select a specific person, sort people in each column\n          in ascending and descending order.\n          To store and control the state of the application, use the History API.\n        </Header>\n      </Segment>\n    </div>\n  </>\n);\n\nexport default HomePage;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Table } from 'semantic-ui-react';\nimport './TableCells.scss';\n\ntype Props = {\n  person: Person;\n  tableHeaders: TableHeader[];\n  onSelect: (field: string, person: Person) => void;\n};\n\nconst TableCells: React.FC<Props> = ({ person, tableHeaders, onSelect }) => (\n  <>\n    {tableHeaders.map(({ code }) => (\n      <Table.Cell\n        className={cn('TableCells', {\n          TableCells_centenarians: person[code] >= 65 && code === 'age',\n          TableCells_aborigine: person.born <= 1650 && code === 'name',\n        })}\n        key={code}\n        content={person[code]}\n        onClick={() => onSelect(code, person)}\n      />\n    ))}\n  </>\n);\n\nexport default TableCells;\n","// import memoize from 'memoize-one';\nimport React from 'react';\nimport { Icon, Pagination, Table, Dropdown } from 'semantic-ui-react';\n\nconst options = [\n  { key: 1, text: '5 people', value: 5 },\n  { key: 2, text: '10 people', value: 10 },\n  { key: 3, text: '20 people', value: 20 },\n  { key: 4, text: '50 people', value: 50 },\n];\n\ntype Props = {\n  page: number;\n  perPage: number;\n  totalPages: number;\n  onSelectPage: (_: React.SyntheticEvent, data: object) => void;\n  onSelectPerPage: (_: React.SyntheticEvent, data: object) => void;\n};\n\nconst Paginator: React.FC<Props> = ({\n  page,\n  perPage,\n  totalPages,\n  onSelectPage,\n  onSelectPerPage,\n}) => {\n  return (\n    <Table.HeaderCell colSpan=\"10\" className=\"Pagination\">\n      <Dropdown\n        placeholder=\"Select people per page\"\n        floated=\"left\"\n        selection\n        name=\"perPage\"\n        value={perPage}\n        onChange={onSelectPerPage}\n        options={options}\n        direction=\"right\"\n      />\n      { totalPages !== 1\n        && (\n          <Pagination\n            floated=\"right\"\n            activePage={page}\n            onPageChange={onSelectPage}\n            ellipsisItem={{\n              content: <Icon name=\"ellipsis horizontal\" />,\n              icon: true,\n            }}\n            prevItem={{\n              content: <Icon name=\"angle left\" />,\n              disabled: page === 1,\n              icon: true,\n            }}\n            firstItem={{\n              content: <Icon name=\"angle double left\" />,\n              disabled: page === 1,\n              icon: true,\n            }}\n            nextItem={{\n              content: <Icon name=\"angle right\" />,\n              disabled: page === totalPages,\n              icon: true,\n            }}\n            lastItem={{\n              content: <Icon name=\"angle double right\" />,\n              disabled: page === totalPages,\n              icon: true,\n            }}\n            totalPages={totalPages}\n          />\n        )}\n    </Table.HeaderCell>\n  );\n};\n\nexport default Paginator;\n","import React from 'react';\nimport cn from 'classnames';\nimport { Icon, Table } from 'semantic-ui-react';\nimport TableCells from '../TableCells';\nimport Paginator from '../Paginator';\nimport './PeopleTable.scss';\n\ntype Props = {\n  path: string;\n  page: number;\n  perPage: number;\n  totalPages: number;\n  sortedBy: string;\n  isSortedAsc: boolean;\n  people: Person[];\n  tableHeaders: TableHeader[];\n  onSortTable: (field: string) => void;\n  onSelectPerson: (field: string, person: Person) => void;\n  onSelectPage: (_: React.SyntheticEvent, data: object) => void;\n  onSelectPerPage: (_: React.SyntheticEvent, data: object) => void;\n};\n\nconst PeopleTable: React.FC<Props> = React.memo(\n  ({\n    path,\n    page,\n    perPage,\n    totalPages,\n    people,\n    sortedBy,\n    isSortedAsc,\n    tableHeaders,\n    onSortTable,\n    onSelectPerson,\n    onSelectPage,\n    onSelectPerPage,\n  }) => {\n    return (\n      <Table celled className=\"PeopleTable\" color=\"teal\" inverted>\n        <Table.Header className=\"PeopleTable-TableHeader\">\n          <Table.Row className=\"PeopleTable-TableRow\">\n            {tableHeaders.map(({ name, code }) => (\n              <Table.HeaderCell\n                key={code}\n                className=\"PeopleTable-HeaderCell\"\n                onClick={() => onSortTable(code)}\n              >\n                {sortedBy === code && (\n                  <Icon\n                    name={\n                      isSortedAsc ? 'arrow circle down' : 'arrow circle up'\n                    }\n                    className=\"PeopleTable-Icon\"\n                  />\n                )}\n                {name}\n              </Table.HeaderCell>\n            ))}\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body className=\"PeopleTable-TableBody\">\n          {people.map(person => (\n            <Table.Row\n              key={person.id}\n              active={person.slug === path}\n              className={cn({\n                'PeopleTable-TableRow': true,\n                'PeopleTable-TableRow_male': person.sex === 'm',\n                'PeopleTable-TableRow_female': person.sex === 'f',\n              })}\n            >\n              <TableCells\n                person={person}\n                tableHeaders={tableHeaders}\n                onSelect={onSelectPerson}\n              />\n            </Table.Row>\n          ))}\n        </Table.Body>\n\n        <Table.Footer>\n          <Table.Row className=\"PeopleTable-TableRow\">\n            <Paginator\n              page={page}\n              perPage={perPage}\n              totalPages={totalPages}\n              onSelectPage={onSelectPage}\n              onSelectPerPage={onSelectPerPage}\n            />\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    );\n  },\n);\n\n\nexport default PeopleTable;\n","import React, { useMemo } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Header } from 'semantic-ui-react';\nimport PeopleTable from '../PeopleTable';\nimport './PeoplePage.scss';\n\nconst headersConfig: HeadersConfig = {\n  id: 'Id',\n  name: 'Name',\n  sex: 'Sex',\n  age: 'Age',\n  born: 'Born',\n  died: 'Died',\n  century: 'Century',\n  fatherName: 'Father',\n  motherName: 'Mother',\n  children: 'Children',\n};\n\nconst createTableHeaders = (people: Person[]): TableHeader[] => {\n  if (people.length === 0) {\n    return [{ name: 'There are no people', code: '' }];\n  }\n\n  return (\n    Object.entries(headersConfig).map(([key, value]) => ({\n      code: key, name: value,\n    }))\n  );\n};\n\ndeclare type Callback = (arg: string) => (a: Person, b: Person) => number;\n\nconst sortType: Callback = (field) => {\n  switch (field) {\n    case 'id':\n    case 'age':\n    case 'born':\n    case 'died':\n    case 'century':\n      return (a, b) => a[field] - b[field];\n    case 'name':\n    case 'sex':\n    case 'fatherName':\n    case 'motherName':\n    case 'children':\n      return (a, b) => a[field].localeCompare(b[field]);\n    default:\n      return () => 0;\n  }\n};\n\ntype Props = {\n  people: Person[];\n  historyPush: (param: Param, path: string) => void;\n};\n\nconst PeoplePage: React.FC<Props> = React.memo(\n  ({ people, historyPush }) => {\n    const location = useLocation();\n    const { personName } = useParams();\n\n    const searchParams = new URLSearchParams(location.search);\n    const page: number = Number(searchParams.get('page')) || 1;\n    const perPage: number = Number(searchParams.get('perPage')) || 5;\n    const isSortedAsc = searchParams.get('sortOrder') !== 'desc';\n    const sortedBy: keyof HeadersConfig = searchParams\n      .get('sortBy') as keyof HeadersConfig || 'id';\n\n    const tableHeaders = createTableHeaders(people);\n\n    const sortedPeople = useMemo(() => {\n      const callback = sortType(sortedBy);\n      const result = [...people].sort(callback);\n\n      if (!isSortedAsc) {\n        result.reverse();\n      }\n\n      return result;\n    }, [people, sortedBy, isSortedAsc]);\n\n    const totalPages = useMemo(() => {\n      const reckon = Math.ceil(sortedPeople.length / perPage);\n\n      if (people.length && page > reckon) {\n        historyPush({ page: '1', perPage: '5' }, personName);\n      }\n\n      return reckon;\n    }, [page, perPage, sortedPeople, personName, people, historyPush]);\n\n    const start = (page - 1) * perPage;\n    const visiblePeople = useMemo(() => (\n      sortedPeople.slice(start, start + perPage)\n    ), [sortedPeople, start, perPage]);\n\n    if (personName && !people.some(person => person.slug === personName)) {\n      historyPush({}, '');\n    }\n\n    const handleSelectPage = (_: React.SyntheticEvent, { activePage }: any) => {\n      historyPush({ page: String(activePage) }, personName);\n    };\n\n    const handleSelectPerPage = (_: React.SyntheticEvent, { name, value }: any) => {\n      const param = { [name]: String(value) };\n\n      historyPush(param, personName);\n    };\n\n    const handleSelectPerson = (field: string, person: Person) => {\n      const path: string | undefined = people\n        .find(parent => parent.name === person[field])?.slug;\n\n      if (field === 'name') {\n        historyPush({}, person.slug);\n      }\n\n      if (path) {\n        if (field === 'mother') {\n          historyPush({}, path);\n        } else if (field === 'father') {\n          historyPush({}, path);\n        }\n      }\n    };\n\n    const handleSortTable = (field: string) => {\n      if (sortedBy !== field) {\n        historyPush({\n          sortBy: field,\n          sortOrder: 'asc',\n        }, personName);\n      } else {\n        historyPush({\n          sortOrder: isSortedAsc ? 'desc' : 'asc',\n        }, personName);\n      }\n    };\n\n    return (\n      <div className=\"PeoplePage\">\n        <Header\n          content=\"People table\"\n          className=\"App-Header\"\n          size=\"huge\"\n          color=\"teal\"\n        />\n\n        <PeopleTable\n          tableHeaders={tableHeaders}\n          people={visiblePeople}\n          sortedBy={sortedBy}\n          isSortedAsc={isSortedAsc}\n          totalPages={totalPages}\n          page={page}\n          perPage={perPage}\n          path={personName}\n          onSortTable={handleSortTable}\n          onSelectPerson={handleSelectPerson}\n          onSelectPage={handleSelectPage}\n          onSelectPerPage={handleSelectPerPage}\n        />\n      </div>\n    );\n  },\n);\n\n\nexport default PeoplePage;\n","import React, { useMemo } from 'react';\nimport cn from 'classnames';\nimport { DropdownItemProps, Form } from 'semantic-ui-react';\nimport './FormField.scss';\n\nconst genderOptions: DropdownItemProps[] = [\n  { key: 'male', text: 'Male', value: 'm' },\n  { key: 'female', text: 'Female', value: 'f' },\n];\n\ntype Props = {\n  id: string;\n  name: string;\n  value: string;\n  born: string;\n  people?: Person[];\n  label: string;\n  placeholder: string;\n  error: string;\n  onChange: (event: React.SyntheticEvent, data: object) => void;\n  onBlur?: (event: React.FormEvent<EventTarget & Element>) => void;\n};\n\nconst FormField: React.FC<Props> = ({\n  id,\n  name,\n  value,\n  label,\n  born = '',\n  people = [],\n  placeholder = '',\n  error = '',\n  onChange,\n  onBlur = () => {},\n}) => {\n  const fatherOptions = people?.reduce((arr: DropdownItemProps[], person: Person) => {\n    if (person.sex === 'm' && person.born < +born && person.died > +born) {\n      arr.push({\n        key: String(person.id),\n        text: person.name,\n        value: person.name,\n      });\n    }\n\n    return arr;\n  }, []);\n\n  const motherOptions = people?.reduce((arr: DropdownItemProps[], person: Person) => {\n    if (person.sex === 'f' && person.born < +born && person.died > +born) {\n      arr.push({\n        key: String(person.id),\n        text: person.name,\n        value: person.name,\n      });\n    }\n\n    return arr;\n  }, []);\n\n  const options = useMemo(() => {\n    if (name === 'fatherName') {\n      return fatherOptions;\n    }\n\n    if (name === 'motherName') {\n      return motherOptions;\n    }\n\n    return genderOptions;\n  }, [name, fatherOptions, motherOptions]);\n\n  return (\n    <>\n      {name === 'sex' || name === 'fatherName' || name === 'motherName'\n        ? (\n          <Form.Select\n            className={cn({\n              'FormField-Select': true,\n              'FormField-Select_gender': name === 'sex',\n            })}\n            width={12}\n            text={\n              (name === 'fatherName' || name === 'motherName') && !born\n                ? 'Enter year of birth' : ''\n            }\n            options={options}\n            error={!!error && { content: error }}\n            disabled={(name === 'fatherName' || name === 'motherName') && !born}\n            id={id}\n            name={name}\n            label={label}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            onBlur={onBlur}\n          />\n        )\n        : (\n          <Form.Input\n            className=\"FormField-Input\"\n            width={name === 'born' || name === 'died' ? 6 : 12}\n            error={!!error && { content: error }}\n            disabled={name === 'died' && !born}\n            id={id}\n            name={name}\n            label={label}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            onBlur={onBlur}\n          />\n        )}\n    </>\n  );\n};\n\nexport default FormField;\n","import React from 'react';\nimport { Message } from 'semantic-ui-react';\nimport './Message.scss';\n\ntype PropsSuccess = {\n  isValid: boolean;\n  allFilled: boolean;\n};\n\nexport const MessageWarning = () => (\n  <Message\n    className=\"Message\"\n    warning\n    header=\"Warning!\"\n    content=\"All form fields must be filled out.\"\n  />\n);\n\nexport const MessageSuccess: React.FC<PropsSuccess> = ({ isValid, allFilled }) => (\n  <Message\n    className=\"Message\"\n    success={isValid && allFilled}\n    header=\"Success!\"\n    content=\"All form fields are filled in correctly.\"\n  />\n);\n","/* eslint-disable max-len */\nexport type Validator = (name: string, value: string, born?: string) => string;\n\nexport const required: Validator = (name, value) => {\n  if (value) {\n    return '';\n  }\n\n  return `${name} is required`;\n};\n\nexport const validYears: Validator = (name, value) => {\n  return +value < 1400 || +value > new Date().getFullYear()\n    ? `${name} is valid only between 1400 and the current year`\n    : '';\n};\n\nexport const diedDiff: Validator = (name, value, born) => {\n  return born && +value - +born <= 150 && +value >= +born\n    ? ''\n    : `${name} must not be less than or exceed the year of birth by more than 150 years`;\n};\n\nexport const validName: Validator = (name, value) => {\n  const NAME_REGEXP = /^((?<title>.*\\.\\s)*(?<firstname>([A-Z][a-z]+\\s*)+)(\\s)(?<suffix>.*)(?<middleinitial>([A-Z]\\.?\\s)*)(?<lastname>[A-Z][a-zA-Z-']+))?$/;\n\n  return NAME_REGEXP.test(value)\n    ? ''\n    : `${name} must be valid`;\n};\n\nexport const minLength = (length: number): Validator => {\n  return (name, value) => {\n    return !value || (value.length >= length)\n      ? ''\n      : `${name} should have at least ${length} characters`;\n  };\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { Header, Form, Button } from 'semantic-ui-react';\nimport FormField from '../FormField';\nimport { MessageSuccess, MessageWarning } from '../common/Messages';\nimport { required, validYears, diedDiff, minLength, validName, Validator } from '../../helpers/validators';\nimport './AddPerson.scss';\n\nconst optionQuery = {\n  maxLengthName: 60,\n  maxLengthYear: 4,\n  patternName: /[^a-z, ]/ig,\n  patternYear: /[^0-9]/g,\n};\n\ntype AddPersonErrors = {\n  [key in keyof AddPersonValues]: string;\n};\n\ninterface FieldConfig {\n  name: keyof AddPersonValues;\n  label: string;\n  placeholder: string;\n  validators?: Validator[];\n}\n\nconst fieldConfigs: FieldConfig[] = [\n  {\n    name: 'name',\n    label: 'Full name',\n    placeholder: 'Enter full name',\n    validators: [required, validName, minLength(2)],\n  },\n  {\n    name: 'born',\n    label: 'Year of birth',\n    placeholder: 'Enter year of birth',\n    validators: [required, validYears],\n  },\n  {\n    name: 'died',\n    label: 'Year of death',\n    placeholder: 'Enter the year of death',\n    validators: [required, validYears, diedDiff],\n  },\n  {\n    name: 'sex',\n    label: 'Gender',\n    placeholder: 'Choose gender',\n    validators: [required],\n  },\n  {\n    name: 'fatherName',\n    label: 'Person’s father',\n    placeholder: 'Choose the father’s full name',\n    validators: [validName, minLength(2)],\n  },\n  {\n    name: 'motherName',\n    label: 'Person’s mother',\n    placeholder: 'Choose the mother’s full name',\n    validators: [validName, minLength(2)],\n  },\n  {\n    name: 'children',\n    label: 'Person’s children',\n    placeholder: 'Enter the person’s children',\n    validators: [validName, minLength(2)],\n  },\n];\n\nconst defaultValues: AddPersonValues = {\n  name: '',\n  born: '',\n  died: '',\n  sex: '',\n  fatherName: '',\n  motherName: '',\n  children: '',\n};\nconst emptyErrors: AddPersonErrors = {\n  name: '',\n  born: '',\n  died: '',\n  sex: '',\n  fatherName: '',\n  motherName: '',\n  children: '',\n};\n\ntype Props = {\n  people: Person[];\n  addPerson: ({\n    name, born, died, sex, fatherName, motherName,\n  }: AddPersonValues) => void;\n};\n\nconst AddPerson: React.FC<Props> = ({ people, addPerson }) => {\n  const [values, setValues] = useState(defaultValues);\n  const [errors, setErrors] = useState(emptyErrors);\n  const allFilled = useMemo(() => Object.values(values).every(Boolean), [values]);\n  const isValid = useCallback((err: AddPersonErrors) => (\n    !Object.values(err).some(Boolean)\n  ), []);\n\n  const validateField = (\n    name: keyof AddPersonValues,\n    value: string,\n    label: string,\n    born = '',\n  ) => {\n    const config = fieldConfigs.find(field => field.name === name);\n\n    if (!config) {\n      throw new Error(`Unknown field \"${name}\"`);\n    }\n\n    const { validators = [] } = config;\n\n    return validators\n      .map(validator => validator(label, value, born))\n      .filter(Boolean)\n      .join(', ');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newErrors: AddPersonErrors = { ...emptyErrors };\n\n    fieldConfigs.forEach(({ name, label }) => {\n      newErrors[name] = validateField(name, values[name], label, values.born);\n    });\n\n    if (!isValid(newErrors)) {\n      setErrors(newErrors);\n\n      return;\n    }\n\n    addPerson(values);\n    setValues(defaultValues);\n    setErrors(emptyErrors);\n  };\n\n  const handleChange = (\n    event: React.SyntheticEvent, { name, value }: any,\n  ) => {\n    if (!event.target) {\n      return;\n    }\n\n    const {\n      patternName, patternYear,\n      maxLengthName, maxLengthYear,\n    } = optionQuery;\n    let usefulness: string;\n\n    if (name === 'born' || name === 'died') {\n      usefulness = value.replace(patternYear, '').slice(0, maxLengthYear);\n    } else {\n      usefulness = value.replace(patternName, '')\n        .replace(/\\s{2,}/g, ' ')\n        .slice(0, maxLengthName);\n    }\n\n    setValues(vals => ({\n      ...vals,\n      [name]: usefulness,\n    }));\n  };\n\n  const handleBlur = (event: React.FormEvent<EventTarget & Element>) => {\n    const field = (event.target as HTMLFormElement).name as keyof AddPersonValues;\n    const label: string = (event.target as HTMLFormElement).id;\n\n    switch (label) {\n      case 'Gender':\n        setErrors(err => ({\n          ...err,\n          sex: required(label, values.sex),\n        }));\n        break;\n      case 'Person’s father':\n        setErrors(err => ({\n          ...err,\n          fatherName: validName(label, values.fatherName),\n        }));\n        break;\n      case 'Person’s mother':\n        setErrors(err => ({\n          ...err,\n          motherName: validName(label, values.motherName),\n        }));\n        break;\n      case 'Year of death':\n        setErrors(err => ({\n          ...err,\n          [field]: validateField(field, values[field], label, values.born),\n        }));\n        break;\n      default:\n        setErrors(err => ({\n          ...err,\n          [field]: validateField(field, values[field], label),\n        }));\n    }\n  };\n\n  const noMistakes = isValid(errors);\n\n  return (\n    <div className=\"AddPerson\">\n      <Header\n        content=\"Form to add a new person\"\n        className=\"App-Header AddPerson-Header\"\n        size=\"huge\"\n        color=\"teal\"\n      />\n      <Form\n        className=\"AddPerson-Form\"\n        warning\n        success={noMistakes && allFilled}\n        onSubmit={handleSubmit}\n      >\n        <Form.Group className=\"AddPerson-FormGroup\">\n          {fieldConfigs.map(({ name, label, placeholder }) => (\n            name === 'born' || name === 'died' ? (\n              <FormField\n                key={name}\n                id={label}\n                name={name}\n                label={label}\n                born={values.born}\n                placeholder={placeholder}\n                value={values[name]}\n                error={errors[name]}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n            ) : (\n              <Form.Group className=\"AddPerson-FormField\" key={name}>\n                <FormField\n                  id={label}\n                  name={name}\n                  label={label}\n                  born={values.born}\n                  people={people}\n                  placeholder={placeholder}\n                  value={values[name]}\n                  error={errors[name]}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </Form.Group>\n            )\n          ))}\n        </Form.Group>\n        <Form.Group className=\"AddPerson-FormGroup\">\n          {\n            noMistakes && allFilled\n              ? <MessageSuccess isValid={noMistakes} allFilled={allFilled} />\n              : <MessageWarning />\n          }\n        </Form.Group>\n        <Form.Group className=\"AddPerson-FormGroup\">\n          <Button\n            className=\"AddPerson-Button\"\n            content=\"Add Person\"\n            color=\"teal\"\n          />\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddPerson;\n","import React from 'react';\n\ntype Props = {\n  message: string;\n};\n\nconst ErrorPage: React.FC<Props> = ({ message }) => <h2>{message}</h2>;\n\nexport default ErrorPage;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport HomePage from '../HomePage';\nimport PeoplePage from '../PeoplePege';\nimport AddPerson from '../AddPerson';\nimport ErrorPage from '../ErrorPage';\nimport './Main.scss';\n\ntype Props = {\n  people: Person[];\n  historyPush: (param: Param, path: string) => void;\n  addPerson: ({\n    name, born, died, sex, fatherName, motherName,\n  }: AddPersonValues) => void;\n};\n\nconst Main: React.FC<Props> = ({ people, historyPush, addPerson }) => {\n  return (\n    <div className=\"Main\">\n      <Switch>\n        <Route\n          path=\"/add-person\"\n          render={() => (\n            <AddPerson\n              people={people}\n              addPerson={addPerson}\n            />\n          )}\n        />\n\n        <Route\n          path=\"/people/:personName?\"\n          render={() => (\n            <PeoplePage\n              people={people}\n              historyPush={historyPush}\n            />\n          )}\n        />\n\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Redirect from=\"/home\" to=\"/\" />\n\n        <Route path=\"/error\">\n          <ErrorPage message=\"Not found\" />\n        </Route>\n        <Redirect from=\"/*\" to=\"/error\" />\n\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <div className=\"Spinner\">\n    <h2 className=\"Spinner-TextInfo\">\n      Loa\n      <span className=\"Spinner-D\">d</span>\n      ing...\n    </h2>\n    <div className=\"Spinner-Circle\">\n      <span className=\"Spinner-Line\" />\n      <span className=\"Spinner-Line\" />\n      <span className=\"Spinner-Line\" />\n      <span className=\"Spinner-Line\" />\n    </div>\n  </div>\n);\n\nexport default Spinner;\n","const BASE_URL = 'https://andreas-just.github.io/library-json';\nconst API_URL = '/people/people-slug.json';\n\nexport const getData = async (url: string) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nexport const getTabs = async (): Promise<Person[]> => {\n  const people = await getData(`${BASE_URL}${API_URL}`);\n\n  return people.map((person: Person, idx: number) => ({\n    ...person,\n    id: idx + 1,\n    father: person.fatherName || '',\n    mother: person.motherName || '',\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n    children: people\n      .filter((child: Person) => (\n        child.fatherName === person.name || child.motherName === person.name\n      ))\n      .map((child: Person) => child.name)\n      .join(', ') || '',\n  }));\n};\n","import React from 'react';\nimport './BackgroundAnimation.scss';\n\nconst BackgroundAnimation = () => (\n  <div className=\"Hero\">\n    <div className=\"Cube\" />\n    <div className=\"Cube\" />\n    <div className=\"Cube\" />\n    <div className=\"Cube\" />\n    <div className=\"Cube\" />\n    <div className=\"Cube\" />\n    <div className=\"Cube\" />\n  </div>\n);\n\nexport default BackgroundAnimation;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport debounce from 'lodash.debounce';\nimport Nav from './components/Nav';\nimport Main from './components/Main';\nimport Spinner from './components/common/Spinner';\nimport { getTabs } from './api/getTabs';\nimport './App.scss';\nimport BackgroundAnimation from './components/common/BackgroundAnimation';\n\nconst App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [id, setId] = useState<number>(0);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTabs().then(response => {\n      setPeople(response);\n      setId(response.length + 1);\n    });\n  }, []);\n\n  const history = useHistory();\n  const location = useLocation();\n  const { personName } = useParams();\n  const searchParams = new URLSearchParams(location.search);\n  const queryFromURL = searchParams.get('query') || '';\n  const historyPush = (param: Param, path: string): void => {\n    const params = {\n      ...Object.fromEntries((searchParams.entries())),\n      ...param,\n    };\n    const pathName = path || '';\n\n    for (const key in params) {\n      searchParams.set(key, params[key]);\n    }\n\n    history.push({\n      pathname: `/people/${pathName}`,\n      search: searchParams.toString(),\n    });\n  };\n\n  useEffect(() => {\n    setQuery(queryFromURL);\n  }, [queryFromURL]);\n\n  const updateQueryInURL = (queryStr: string) => {\n    if (queryStr !== '') {\n      historyPush({ query: queryStr }, personName);\n    } else {\n      searchParams.delete('query');\n      historyPush({}, personName);\n    }\n  };\n\n  const applyQuery = useCallback(debounce(updateQueryInURL, 2000), []);\n\n  const lowerQuery = queryFromURL.toLowerCase();\n  const filteredPeople = useMemo(() => (\n    people.filter(({ name }) => name.toLowerCase().includes(lowerQuery))\n  ), [lowerQuery, people]);\n\n  const addPerson = ({\n    name, born, died, sex, fatherName, motherName, children,\n  }: AddPersonValues) => {\n    const age = +died - +born;\n    const century = +died % 100 === 0 ? +died / 100 : Math.ceil(+died / 100);\n    const slug = `${name.toLowerCase().split(' ').join('-')}-${born}`;\n\n    const newPerson: Person = {\n      name,\n      sex,\n      age,\n      born: +born,\n      died: +died,\n      century,\n      fatherName,\n      motherName,\n      children,\n      slug,\n      id,\n    };\n\n    setPeople([...people, newPerson]);\n    setId(id + 1);\n\n    historyPush(\n      {\n        sortBy: 'name',\n        sortOrder: 'asc',\n        perPage: '10',\n        query: name.slice(0, 2),\n      },\n      slug,\n    );\n  };\n\n  if (!people.length) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav\n        query={query}\n        setQuery={setQuery}\n        applyQuery={applyQuery}\n      />\n      <Main\n        people={filteredPeople}\n        historyPush={historyPush}\n        addPerson={addPerson}\n      />\n      <footer className=\"App-Footer\">\n        &copy;Andreas Just 2020\n      </footer>\n      <BackgroundAnimation />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}